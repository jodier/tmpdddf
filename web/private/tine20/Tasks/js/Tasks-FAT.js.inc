/*
 * Tine 2.0 - Tasks 
 * Copyright (c) 2007-2011 Metaways Infosystems GmbH (http://www.metaways.de)
 * http://www.gnu.org/licenses/agpl.html AGPL Version 3
 */
Ext.ns("Tine.Tasks.Model");Tine.Tasks.Model.TaskArray=Tine.Tinebase.Model.genericFields.concat([{name:"id"},{name:"percent",header:"Percent"},{name:"completed",type:"date",dateFormat:Date.patterns.ISO8601Long},{name:"due",type:"date",dateFormat:Date.patterns.ISO8601Long},{name:"class"},{name:"description"},{name:"geo"},{name:"location"},{name:"organizer"},{name:"originator_tz"},{name:"priority"},{name:"status"},{name:"summary"},{name:"url"},{name:"attach"},{name:"attendee"},{name:"tags"},{name:"comment"},{name:"contact"},{name:"related"},{name:"resources"},{name:"rstatus"},{name:"dtstart",type:"date",dateFormat:Date.patterns.ISO8601Long},{name:"duration",type:"date",dateFormat:Date.patterns.ISO8601Long},{name:"recurid"},{name:"exdate"},{name:"exrule"},{name:"rdate"},{name:"rrule"},{name:"notes"},{name:"alarms"},{name:"relations"}]);Tine.Tasks.Model.Task=Tine.Tinebase.data.Record.create(Tine.Tasks.Model.TaskArray,{appName:"Tasks",modelName:"Task",idProperty:"id",titleProperty:"summary",recordName:"Task",recordsName:"Tasks",containerProperty:"container_id",containerName:"to do list",containersName:"to do lists"});Tine.Tasks.Model.Task.getDefaultData=function(){var a=Tine.Tinebase.appMgr.get("Tasks");return{"class":"PUBLIC",percent:0,organizer:Tine.Tinebase.registry.get("currentAccount"),container_id:a.getMainScreen().getWestPanel().getContainerTreePanel().getDefaultContainer()}};Tine.Tasks.Model.Task.getFilterModel=function(){var a=Tine.Tinebase.appMgr.get("Tasks");return[{label:_("Quick search"),field:"query",operators:["contains"]},{filtertype:"tine.widget.container.filtermodel",app:a,recordClass:Tine.Tasks.Model.Task},{label:a.i18n._("Summary"),field:"summary"},{label:a.i18n._("Due Date"),field:"due",valueType:"date",operators:["within","before","after"]},{label:a.i18n._("Status"),field:"status",filtertype:"tine.widget.keyfield.filter",app:a,defaultValue:Tine.Tasks.Model.Task.getClosedStatus(),keyfieldName:"taskStatus",defaultOperator:"notin"},{label:a.i18n._("Responsible"),field:"organizer",valueType:"user"},{filtertype:"tinebase.tag",app:a},{label:_("Last Modified Time"),field:"last_modified_time",valueType:"date"},{label:_("Last Modified By"),field:"last_modified_by",valueType:"user"},{label:_("Creation Time"),field:"creation_time",valueType:"date"},{label:_("Created By"),field:"created_by",valueType:"user"}]};Tine.Tasks.Model.Task.getClosedStatus=function(){var a=[];Tine.Tinebase.widgets.keyfield.StoreMgr.get("Tasks","taskStatus").each(function(b){if(!b.get("is_open")){a.push(b.get("id"))}},this);return a};Tine.Tasks.JsonBackend=new Tine.Tinebase.data.RecordProxy({appName:"Tasks",modelName:"Task",recordClass:Tine.Tasks.Model.Task});Tine.Tasks.Model.Status=Tine.Tinebase.data.Record.create([{name:"id"},{name:"value"},{name:"icon"},{name:"system"},{name:"is_open"},{name:"i18nValue"}],{appName:"Tasks",modelName:"Status",idProperty:"id",titleProperty:"i18nValue",recordName:"Status",recordsName:"Status"});Ext.ns("Tine","Tine.Tasks");Tine.Tasks.Application=Ext.extend(Tine.Tinebase.Application,{addButtonText:"New Task"});Tine.Tasks.MainScreen=Ext.extend(Tine.widgets.MainScreen,{activeContentType:"Task"});Tine.Tasks.TaskTreePanel=function(a){Ext.apply(this,a);this.id="TasksTreePanel";this.recordClass=Tine.Tasks.Model.Task;this.filterMode="filterToolbar";Tine.Tasks.TaskTreePanel.superclass.constructor.call(this)};Ext.extend(Tine.Tasks.TaskTreePanel,Tine.widgets.container.TreePanel,{afterRender:function(){this.supr().afterRender.apply(this,arguments)}});Tine.Tasks.TaskFilterPanel=function(a){Ext.apply(this,a);Tine.Tasks.TaskFilterPanel.superclass.constructor.call(this)};Ext.extend(Tine.Tasks.TaskFilterPanel,Tine.widgets.persistentfilter.PickerPanel,{filter:[{field:"model",operator:"equals",value:"Tasks_Model_TaskFilter"}]});Ext.namespace("Tine.Tasks");Tine.Tasks.TaskGridPanel=Ext.extend(Tine.widgets.grid.GridPanel,{recordClass:Tine.Tasks.Model.Task,defaultSortInfo:{field:"due",dir:"ASC"},gridConfig:{clicksToEdit:"auto",quickaddMandatory:"summary",resetAllOnNew:false,autoExpandColumn:"summary",enableDragDrop:true,ddGroup:"containerDDGroup"},i18nDeleteQuestion:["Do you really want to delete the selected task?","Do you really want to delete the selected tasks?"],initComponent:function(){this.recordProxy=Tine.Tasks.JsonBackend;this.gridConfig.cm=this.getColumnModel();this.initFilterToolbar();this.plugins=this.plugins||[];this.plugins.push(this.filterToolbar);Tine.Tasks.TaskGridPanel.superclass.initComponent.call(this)},initFilterToolbar:function(){this.filterToolbar=new Tine.widgets.grid.FilterPanel({recordClass:this.recordClass,app:this.app,filterModels:Tine.Tasks.Model.Task.getFilterModel(),defaultFilter:"query",filters:[{field:"container_id",operator:"equals",value:{path:Tine.Tinebase.container.getMyNodePath()}}],plugins:[new Tine.widgets.grid.FilterToolbarQuickFilterPlugin()]})},getColumnModel:function(){return new Ext.grid.ColumnModel({defaults:{sortable:true,resizable:true},columns:[{id:"tags",header:this.app.i18n._("Tags"),width:40,dataIndex:"tags",sortable:false,renderer:Tine.Tinebase.common.tagsRenderer},{id:"lead_name",header:this.app.i18n._("Lead"),dataIndex:"relations",width:175,sortable:false,hidden:true,renderer:this.leadRenderer},{id:"summary",header:this.app.i18n._("Summary"),width:400,dataIndex:"summary",quickaddField:new Ext.form.TextField({emptyText:this.app.i18n._("Add a task...")})},{id:"due",header:this.app.i18n._("Due Date"),width:145,dataIndex:"due",renderer:Tine.Tinebase.common.dateTimeRenderer,editor:new Ext.ux.form.DateTimeField({defaultTime:"12:00",allowBlank:true}),quickaddField:new Ext.ux.form.DateTimeField({defaultTime:"12:00",allowBlank:true})},{id:"priority",header:this.app.i18n._("Priority"),width:65,dataIndex:"priority",renderer:Tine.Tinebase.widgets.keyfield.Renderer.get("Tasks","taskPriority"),editor:{xtype:"widget-keyfieldcombo",app:"Tasks",keyFieldName:"taskPriority"},quickaddField:new Tine.Tinebase.widgets.keyfield.ComboBox({app:"Tasks",keyFieldName:"taskPriority",value:"NORMAL"})},{id:"percent",header:this.app.i18n._("Percent"),width:50,dataIndex:"percent",renderer:Ext.ux.PercentRenderer,editor:new Ext.ux.PercentCombo({autoExpand:true,blurOnSelect:true}),quickaddField:new Ext.ux.PercentCombo({autoExpand:true})},{id:"status",header:this.app.i18n._("Status"),width:85,dataIndex:"status",renderer:Tine.Tinebase.widgets.keyfield.Renderer.get("Tasks","taskStatus"),editor:{xtype:"widget-keyfieldcombo",app:"Tasks",keyFieldName:"taskStatus"},quickaddField:new Tine.Tinebase.widgets.keyfield.ComboBox({app:"Tasks",keyFieldName:"taskStatus",value:"NEEDS-ACTION"})},{id:"creation_time",header:this.app.i18n._("Creation Time"),hidden:true,width:90,dataIndex:"creation_time",renderer:Tine.Tinebase.common.dateTimeRenderer},{id:"completed",header:this.app.i18n._("Completed"),hidden:true,width:90,dataIndex:"completed",renderer:Tine.Tinebase.common.dateTimeRenderer},{id:"organizer",header:this.app.i18n._("Responsible"),width:200,dataIndex:"organizer",renderer:Tine.Tinebase.common.accountRenderer,quickaddField:Tine.widgets.form.RecordPickerManager.get("Addressbook","Contact",{userOnly:true,useAccountRecord:true,blurOnSelect:true,selectOnFocus:true,allowEmpty:true,value:Tine.Tinebase.registry.get("currentAccount")})}]})},leadRenderer:function(c){if(Ext.isArray(c)&&c.length>0){var b=0;while(b<c.length&&c[b].related_model!="Crm_Model_Lead"){b++}if(c[b]){var a=(c[b].related_record.lead_name!==null)?c[b].related_record.lead_name:"";return Ext.util.Format.htmlEncode(a)}}},getViewRowClass:function(a,d){var f=a.get("due");var e="";if(a.get("status")=="COMPLETED"){e+="tasks-grid-completed"}else{if(f){var c=f.format("Y-m-d");var b=new Date().format("Y-m-d");if(c==b){e+="tasks-grid-duetoday"}else{if(c<b){e+="tasks-grid-overdue"}}}}return e}});Ext.namespace("Tine.Tasks");Tine.Tasks.TaskEditDialog=Ext.extend(Tine.widgets.dialog.EditDialog,{containerId:-1,relatedApp:"",labelAlign:"side",windowNamePrefix:"TasksEditWindow_",appName:"Tasks",recordClass:Tine.Tasks.Model.Task,recordProxy:Tine.Tasks.JsonBackend,showContainerSelector:true,tbarItems:[{xtype:"widget-activitiesaddbutton"}],initComponent:function(){if(!this.record){this.record=new this.recordClass(this.recordClass.getDefaultData(),0)}this.alarmPanel=new Tine.widgets.dialog.AlarmPanel({});Tine.Tasks.TaskEditDialog.superclass.initComponent.call(this)},onRecordLoad:function(){if(!this.rendered){this.onRecordLoad.defer(250,this);return}Tine.Tasks.TaskEditDialog.superclass.onRecordLoad.apply(this,arguments);this.handleCompletedDate();this.alarmPanel.onRecordLoad(this.record)},onRecordUpdate:function(){Tine.Tasks.TaskEditDialog.superclass.onRecordUpdate.apply(this,arguments);this.alarmPanel.onRecordUpdate(this.record)},handleCompletedDate:function(){var d=Tine.Tinebase.widgets.keyfield.StoreMgr.get("Tasks","taskStatus"),a=this.getForm().findField("status").getValue(),c=d.getById(a),b=this.getForm().findField("completed");if(c){if(c.get("is_open")!==0){b.setValue(null);b.setDisabled(true)}else{if(!Ext.isDate(b.getValue())){b.setValue(new Date())}b.setDisabled(false)}}},isValid:function(){var c=true;var d=this.getForm().findField("due"),a=d.getValue(),b=this.alarmPanel.alarmGrid.getFromStoreAsArray();if(!Ext.isEmpty(b)&&!Ext.isDate(a)){d.markInvalid(this.app.i18n._("You have to supply a due date, because an alarm ist set!"));c=false}return c&&Tine.Tasks.TaskEditDialog.superclass.isValid.apply(this,arguments)},getFormItems:function(){return{xtype:"tabpanel",border:false,plain:true,activeTab:0,border:false,plugins:[{ptype:"ux.tabpanelkeyplugin"}],items:[{title:this.app.i18n.n_("Task","Tasks",1),autoScroll:true,border:false,frame:true,layout:"border",items:[{region:"center",xtype:"columnform",labelAlign:"top",formDefaults:{xtype:"textfield",anchor:"100%",labelSeparator:"",columnWidth:0.333},items:[[{columnWidth:1,fieldLabel:this.app.i18n._("Summary"),name:"summary",listeners:{render:function(a){a.focus(false,250)}},allowBlank:false}],[new Ext.ux.form.DateTimeField({allowBlank:true,defaultTime:"12:00",fieldLabel:this.app.i18n._("Due date"),name:"due"}),new Tine.Tinebase.widgets.keyfield.ComboBox({fieldLabel:this.app.i18n._("Priority"),name:"priority",app:"Tasks",keyFieldName:"taskPriority",value:"NORMAL"}),Tine.widgets.form.RecordPickerManager.get("Addressbook","Contact",{userOnly:true,fieldLabel:this.app.i18n._("Organizer"),emptyText:_("Add Responsible ..."),useAccountRecord:true,name:"organizer",allowEmpty:true})],[{columnWidth:1,fieldLabel:this.app.i18n._("Notes"),emptyText:this.app.i18n._("Enter description..."),name:"description",xtype:"textarea",height:200}],[new Ext.ux.PercentCombo({fieldLabel:this.app.i18n._("Percentage"),editable:false,name:"percent"}),new Tine.Tinebase.widgets.keyfield.ComboBox({app:"Tasks",keyFieldName:"taskStatus",fieldLabel:this.app.i18n._("Status"),name:"status",listeners:{scope:this,change:this.handleCompletedDate}}),new Ext.ux.form.DateTimeField({allowBlank:true,defaultTime:"12:00",fieldLabel:this.app.i18n._("Completed"),name:"completed"})]]},{layout:"accordion",animate:true,region:"east",width:210,split:true,collapsible:true,collapseMode:"mini",header:false,margins:"0 5 0 5",border:true,items:[new Tine.widgets.activities.ActivitiesPanel({app:"Tasks",showAddNoteForm:false,border:false,bodyStyle:"border:1px solid #B5B8C8;"}),new Tine.widgets.tags.TagPanel({app:"Tasks",border:false,bodyStyle:"border:1px solid #B5B8C8;"})]}]},new Tine.widgets.activities.ActivitiesTabPanel({app:this.appName,record_id:(this.record)?this.record.id:"",record_model:this.appName+"_Model_"+this.recordClass.getMeta("modelName")}),this.alarmPanel]}}});Tine.Tasks.TaskEditDialog.openWindow=function(a){var c=(a.record&&a.record.id)?a.record.id:0;var b=Tine.WindowFactory.getWindow({width:900,height:490,name:Tine.Tasks.TaskEditDialog.prototype.windowNamePrefix+c,contentPanelConstructor:"Tine.Tasks.TaskEditDialog",contentPanelConstructorConfig:a});return b};