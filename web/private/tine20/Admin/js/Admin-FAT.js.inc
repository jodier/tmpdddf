/*
 * Tine 2.0 - Admin 
 * Copyright (c) 2007-2011 Metaways Infosystems GmbH (http://www.metaways.de)
 * http://www.gnu.org/licenses/agpl.html AGPL Version 3
 */
Ext.ns("Tine.Admin");Tine.Admin=function(){var a=function(c){return[{text:c.ngettext("User","Users",50),cls:"treemain",iconCls:"admin-node-user",allowDrag:false,allowDrop:true,id:"accounts",icon:false,children:[],leaf:null,expanded:true,dataPanelType:"accounts",viewRight:"accounts"},{text:c.gettext("Groups"),cls:"treemain",iconCls:"admin-node-groups",allowDrag:false,allowDrop:true,id:"groups",icon:false,children:[],leaf:null,expanded:true,dataPanelType:"groups",viewRight:"accounts"},{text:c.gettext("Roles"),cls:"treemain",iconCls:"action_permissions",allowDrag:false,allowDrop:true,id:"roles",children:[],leaf:null,expanded:true,dataPanelType:"roles",viewRight:"roles"},{text:c.gettext("Computers"),cls:"treemain",iconCls:"admin-node-computers",allowDrag:false,allowDrop:true,id:"computers",icon:false,children:[],leaf:null,expanded:true,dataPanelType:"computers",viewRight:"computers"},{text:c.gettext("Applications"),cls:"treemain",iconCls:"admin-node-applications",allowDrag:false,allowDrop:true,id:"applications",icon:false,children:[],leaf:null,expanded:true,dataPanelType:"applications",viewRight:"apps"},{text:c.gettext("Access Log"),cls:"treemain",iconCls:"admin-node-accesslog",allowDrag:false,allowDrop:true,id:"accesslog",icon:false,children:[],leaf:null,expanded:true,dataPanelType:"accesslog",viewRight:"access_log"},{text:c.gettext("Shared Tags"),cls:"treemain",iconCls:"action_tag",allowDrag:false,allowDrop:true,id:"sharedtags",children:[],leaf:null,expanded:true,dataPanelType:"sharedtags",viewRight:"shared_tags"},{text:c.gettext("Containers"),cls:"treemain",iconCls:"admin-node-containers",allowDrag:false,allowDrop:true,id:"containers",children:[],leaf:null,expanded:true,dataPanelType:"containers",viewRight:"containers"},{text:c.gettext("Customfields"),cls:"treemain",iconCls:"admin-node-customfields",allowDrag:false,allowDrop:true,id:"customfields",children:[],leaf:null,expanded:true,dataPanelType:"customfields",viewRight:"customfields"},{text:c.gettext("Server Information"),cls:"treemain",iconCls:"admin-node-computers",allowDrag:false,allowDrop:true,id:"serverinfo",children:[],leaf:null,expanded:true,dataPanelType:"serverinfo"}]};var b=function(){var j=new Locale.Gettext();j.textdomain("Admin");var h=new Ext.tree.TreeLoader({dataUrl:"index.php",baseParams:{jsonKey:Tine.Tinebase.registry.get("jsonKey"),method:"Admin.getSubTree",location:"mainTree"}});h.on("beforeload",function(i,k){i.baseParams.node=k.id},this);var g=new Ext.tree.TreePanel({title:j.gettext("Admin"),id:"admin-tree",iconCls:"AdminIconCls",loader:h,rootVisible:false,border:false,autoScroll:true});var c=new Ext.tree.TreeNode({text:"root",draggable:false,allowDrop:false,id:"root"});g.setRootNode(c);var e=a(j);for(var d=0;d<e.length;d+=1){var f=new Ext.tree.AsyncTreeNode(e[d]);if(e[d].viewRight&&!Tine.Tinebase.common.hasRight("view","Admin",e[d].viewRight)){f.disabled=true}c.appendChild(f)}g.on("click",function(l,k){if(l===null||l.disabled){return false}var i=Tine.Tinebase.MainScreen.getActiveToolbar();switch(l.attributes.dataPanelType){case"accesslog":Tine.Admin.accessLog.show();break;case"accounts":Tine.Admin.user.show();break;case"groups":Tine.Admin.Groups.Main.show();break;case"computers":Tine.Admin.sambaMachine.show();break;case"applications":Tine.Admin.Applications.Main.show();break;case"sharedtags":Tine.Admin.Tags.Main.show();break;case"roles":Tine.Admin.Roles.Main.show();break;case"containers":Tine.Admin.container.show();break;case"customfields":Tine.Admin.customfield.show();break;case"serverinfo":Tine.Admin.getServerInfo(function(m){Tine.log.debug("Tine.Admin.getServerInfo()");if(!this.infoPanel){this.infoPanel=new Ext.Panel({html:m.html,autoScroll:true})}else{this.infoPanel.update(m.html)}if(!this.infoPanelToolbar){this.infoPanelToolbar=new Ext.Toolbar({items:[{text:j.gettext("Refresh"),handler:function(){l.fireEvent("click",l)},iconCls:"action_login",scale:"medium",rowspan:2,iconAlign:"top"}]})}Tine.Tinebase.MainScreen.setActiveContentPanel(this.infoPanel,true);Tine.Tinebase.MainScreen.setActiveToolbar(this.infoPanelToolbar,true)},this);break}},this);g.on("beforeexpand",function(i){if(i.getSelectionModel().getSelectedNode()===null){i.expandPath("/root");if(Tine.Tinebase.common.hasRight("manage","Admin","accounts")){i.selectPath("/root/accounts")}else{c.eachChild(function(k){if(Tine.Tinebase.common.hasRight("manage","Admin",k.attributes.viewRight)){i.selectPath("/root/"+k.id);return}},this)}}i.fireEvent("click",i.getSelectionModel().getSelectedNode())},this);g.on("contextmenu",function(k,i){i.stopEvent()});return g};return{getPanel:b}}();Ext.namespace("Tine.Admin");Tine.Admin.AdminPanel=Ext.extend(Tine.widgets.dialog.AdminPanel,{appName:"Admin",getConfigItems:function(){return[[{xtype:"tinerecordpickercombobox",fieldLabel:this.app.i18n._("Default Addressbook for new contacts and groups"),name:"defaultInternalAddressbook",blurOnSelect:true,recordClass:Tine.Tinebase.Model.Container,recordProxy:Tine.Admin.sharedAddressbookBackend}]]}});Tine.Admin.AdminPanel.onUpdate=function(){window.location=window.location.href.replace(/#+.*/,"")};Tine.Admin.AdminPanel.openWindow=function(a){var b=Tine.WindowFactory.getWindow({width:600,height:400,name:Tine.Admin.AdminPanel.prototype.windowNamePrefix+Ext.id(),contentPanelConstructor:"Tine.Admin.AdminPanel",contentPanelConstructorConfig:a});return b};Ext.ns("Tine.Admin.Model");Tine.Admin.Model.TagRight=Ext.data.Record.create([{name:"account_id"},{name:"account_type"},{name:"account_name"},{name:"account_data"},{name:"view_right",type:"boolean"},{name:"use_right",type:"boolean"}]);Tine.Admin.Model.AccessLog=Tine.Tinebase.data.Record.create([{name:"sessionid"},{name:"login_name"},{name:"ip"},{name:"li",type:"date",dateFormat:Date.patterns.ISO8601Long},{name:"lo",type:"date",dateFormat:Date.patterns.ISO8601Long},{name:"id"},{name:"account_id"},{name:"result"},{name:"clienttype"}],{appName:"Admin",modelName:"AccessLog",idProperty:"id",titleProperty:"login_name",recordName:"AccessLog",recordsName:"AccessLogs"});Tine.Admin.accessLogBackend=new Tine.Tinebase.data.RecordProxy({appName:"Admin",modelName:"AccessLog",recordClass:Tine.Admin.Model.AccessLog,idProperty:"id"});Tine.Admin.Model.Group=Tine.Tinebase.data.Record.create([{name:"id"},{name:"name"},{name:"description"},{name:"container_id"},{name:"visibility"}],{appName:"Admin",modelName:"Group",idProperty:"id",titleProperty:"name",recordName:"Group",recordsName:"Groups",containerProperty:null});Tine.Admin.Model.Group.getDefaultData=function(){var a=Tine.Admin.registry.get("defaultInternalAddressbook");return{visibility:(a!==null)?"displayed":"hidden",container_id:a}};Tine.Admin.Model.Application=Tine.Tinebase.data.Record.create([{name:"id"},{name:"name"},{name:"status"},{name:"order"},{name:"app_tables"},{name:"version"}],{appName:"Admin",modelName:"Application",idProperty:"id",titleProperty:"name",recordName:"Application",recordsName:"Applications",containerProperty:null});Ext.ns("Tine.Admin","Tine.Admin.Applications");Tine.Admin.Applications.Main=function(){var c=null;var f=null;var n=function(s,p){var q=Ext.getCmp("gridAdminApplications").getSelectionModel();if(q.getCount()>0){var r=q.getSelections();var o=r[0].data.name;if(Tine[o]){h(o)}}else{s.setDisabled(true)}};var h=function(o){Tine[o].AdminPanel.openWindow({record:(Tine[o].Model.Settings)?new Tine[o].Model.Settings(o):null,title:String.format(_("{0} Settings"),e(o)),listeners:{scope:this,update:(Tine[o].AdminPanel.onUpdate)?Tine[o].AdminPanel.onUpdate:Ext.emptyFn}})};var d=function(q){var p=new Array();var r=Ext.getCmp("gridAdminApplications").getSelectionModel().getSelections();for(var o=0;o<r.length;++o){p.push(r[o].id)}Ext.Ajax.request({url:"index.php",method:"post",params:{method:"Admin.setApplicationState",applicationIds:p,state:q},callback:function(t,v,u){if(v===true){var s=Ext.util.JSON.decode(u.responseText);if(s.success===true){window.location=window.location.href.replace(/#+.*/,"")}}}})};var a=new Locale.Gettext();a.textdomain("Admin");var g=new Ext.Action({text:a.gettext("Enable Application"),disabled:true,handler:d.createDelegate(this,["enabled"]),iconCls:"action_enable"});var k=new Ext.Action({text:a.gettext("Disable Application"),disabled:true,handler:d.createDelegate(this,["disabled"]),iconCls:"action_disable"});var j=new Ext.Action({text:a.gettext("Settings"),disabled:true,handler:n,iconCls:"action_settings"});var m=function(){var o=new Ext.data.JsonStore({url:"index.php",baseParams:{method:"Admin.getApplications"},root:"results",totalProperty:"totalcount",id:"id",fields:Tine.Admin.Model.Application,remoteSort:true});o.setDefaultSort("name","asc");o.on("beforeload",function(q,p){p=p||{};p.params=p.params||{};p.params.filter=Ext.getCmp("ApplicationsAdminQuickSearchField").getValue()});return o};var l=function(){if(c){Tine.Tinebase.MainScreen.setActiveToolbar(c,true);return}this.translation=new Locale.Gettext();this.translation.textdomain("Admin");g.setText(this.translation.gettext("enable application"));k.setText(this.translation.gettext("disable application"));var o=new Ext.ux.SearchField({id:"ApplicationsAdminQuickSearchField",width:240,emptyText:Tine.Tinebase.translation._hidden("enter searchfilter")});o.on("change",function(){Ext.getCmp("gridAdminApplications").getStore().load({params:{start:0,limit:50}})});c=new Ext.Toolbar({id:"toolbarAdminApplications",split:false,items:[{xtype:"buttongroup",columns:7,items:[Ext.apply(new Ext.Button(g),{scale:"medium",rowspan:2,iconAlign:"top"}),{xtype:"tbspacer",width:10},Ext.apply(new Ext.Button(k),{scale:"medium",rowspan:2,iconAlign:"top"}),{xtype:"tbspacer",width:10},{xtype:"tbseparator"},{xtype:"tbspacer",width:10},Ext.apply(new Ext.Button(j),{scale:"medium",rowspan:2,iconAlign:"top"})]},"->",this.translation.gettext("Search:")," "," ",o]});Tine.Tinebase.MainScreen.setActiveToolbar(c,true)};var e=function(o){var p=Tine.Tinebase.appMgr.get(o);return(p)?p.getTitle():o};var b=function(p,v,s,o,q,r){var u=new Locale.Gettext();u.textdomain("Admin");var t;switch(p){case"disabled":t=u.gettext("disabled");break;case"enabled":t=u.gettext("enabled");break;default:t=String.format(u.gettext("unknown status ({0})"),value);break}return t};var i=function(){if(f){Tine.Tinebase.MainScreen.setActiveContentPanel(f,true);return}var q=new Ext.menu.Menu({items:[g,k,j]});var o=m();var r=new Ext.PagingToolbar({pageSize:50,store:o,displayInfo:true,displayMsg:this.translation.gettext("Displaying application {0} - {1} of {2}"),emptyMsg:this.translation.gettext("No applications to display")});var s=new Ext.grid.ColumnModel({defaults:{sortable:true,resizable:true},columns:[{header:this.translation.gettext("Order"),id:"order",dataIndex:"order",width:50},{header:this.translation.gettext("Name"),id:"name",dataIndex:"name",renderer:e},{header:this.translation.gettext("Status"),id:"status",dataIndex:"status",width:150,renderer:b},{header:this.translation.gettext("Version"),id:"version",dataIndex:"version",width:70}]});var p=new Ext.grid.RowSelectionModel({multiSelect:true});p.on("selectionchange",function(w){var t=w.getCount();var v=w.getSelections();if(Tine.Tinebase.common.hasRight("manage","Admin","apps")){if(t<1){g.setDisabled(true);k.setDisabled(true);j.setDisabled(true)}else{if(t>1){g.setDisabled(false);k.setDisabled(false);j.setDisabled(true)}else{g.setDisabled(false);k.setDisabled(false);if(Tine[v[0].data.name]&&Tine[v[0].data.name].AdminPanel&&v[0].data.status=="enabled"){j.setDisabled(false)}else{j.setDisabled(true)}}}for(var u=0;u<v.length;u++){if(typeof v[u].get=="function"&&v[u].get("name").toString().match(/Tinebase|Admin|Addressbook/)){g.setDisabled(true);k.setDisabled(true);break}}}});f=new Ext.grid.GridPanel({id:"gridAdminApplications",store:o,cm:s,tbar:r,autoSizeColumns:false,selModel:p,enableColLock:false,autoExpandColumn:"name",border:false,viewConfig:{getRowClass:function(t,u){var v="";switch(t.get("status")){case"disabled":v="grid_row_disabled";break;case"enabled":v="grid_row_enabled";break}return v}}});Tine.Tinebase.MainScreen.setActiveContentPanel(f,true);f.on("rowcontextmenu",function(u,t,v){v.stopEvent();if(!u.getSelectionModel().isSelected(t)){u.getSelectionModel().selectRow(t);if(Tine.Tinebase.common.hasRight("manage","Admin","apps")){g.setDisabled(false);k.setDisabled(false)}if(u.getSelectionModel().getSelected().get("name").toString().match(/Tinebase|Admin|Addressbook/)){g.setDisabled(true);k.setDisabled(true)}}q.showAt(v.getXY())},this);f.on("rowdblclick",function(v,u,w){var t=v.getStore().getAt(u);if(Tine[t.data.name].AdminPanel&&t.data.status=="enabled"){h(t.data.name)}},this);return};return{show:function(){l();i();this.loadData()},loadData:function(){var o=Ext.getCmp("gridAdminApplications").getStore();o.load({params:{start:0,limit:50}})},reload:function(){if(Ext.ComponentMgr.all.containsKey("gridAdminApplications")){setTimeout("Ext.getCmp('gridAdminApplications').getStore().reload()",200)}}}}();Ext.ns("Tine.Admin.user");Tine.Admin.user.show=function(){var a=Tine.Tinebase.appMgr.get("Admin");if(!Tine.Admin.user.gridPanel){Tine.Admin.user.gridPanel=new Tine.Admin.user.GridPanel({app:a})}else{Tine.Admin.user.gridPanel.loadGridData.defer(100,Tine.Admin.user.gridPanel,[])}Tine.Tinebase.MainScreen.setActiveContentPanel(Tine.Admin.user.gridPanel,true);Tine.Tinebase.MainScreen.setActiveToolbar(Tine.Admin.user.gridPanel.actionToolbar,true)};Ext.ns("Tine.Admin.Model");Tine.Admin.Model.UserArray=[{name:"accountId"},{name:"accountFirstName"},{name:"accountLastName"},{name:"accountLoginName"},{name:"accountPassword"},{name:"accountDisplayName"},{name:"accountFullName"},{name:"accountStatus"},{name:"groups"},{name:"accountRoles"},{name:"accountPrimaryGroup"},{name:"accountExpires",type:"date",dateFormat:Date.patterns.ISO8601Long},{name:"accountLastLogin",type:"date",dateFormat:Date.patterns.ISO8601Long},{name:"accountLastPasswordChange",type:"date",dateFormat:Date.patterns.ISO8601Long},{name:"accountLastLoginfrom"},{name:"accountEmailAddress"},{name:"accountHomeDirectory"},{name:"accountLoginShell"},{name:"openid"},{name:"visibility"},{name:"sambaSAM"},{name:"emailUser"},{name:"contact_id"},{name:"container_id"}];Tine.Admin.Model.User=Tine.Tinebase.data.Record.create(Tine.Admin.Model.UserArray,{appName:"Admin",modelName:"User",idProperty:"accountId",titleProperty:"accountDisplayName",recordName:"User",recordsName:"Users"});Tine.Admin.Model.User.getDefaultData=function(){var b=Tine.Admin.registry.get("defaultInternalAddressbook"),a=(Tine.Admin.registry.get("config").defaultImapUserSettings&&Tine.Admin.registry.get("config").defaultImapUserSettings.value)?Tine.Admin.registry.get("config").defaultImapUserSettings.value:"";return{sambaSAM:"",emailUser:a,accountStatus:"enabled",visibility:(b!==null)?"displayed":"hidden",container_id:b,accountPrimaryGroup:Tine.Admin.registry.get("defaultPrimaryGroup")}};Tine.Admin.Model.SAMUserArray=[{name:"sid"},{name:"primaryGroupSID"},{name:"acctFlags"},{name:"homeDrive"},{name:"homePath"},{name:"profilePath"},{name:"logonScript"},{name:"logonTime",type:"date",dateFormat:Date.patterns.ISO8601Long},{name:"logoffTime",type:"date",dateFormat:Date.patterns.ISO8601Long},{name:"kickoffTime",type:"date",dateFormat:Date.patterns.ISO8601Long},{name:"pwdLastSet",type:"date",dateFormat:Date.patterns.ISO8601Long},{name:"pwdCanChange",type:"date",dateFormat:Date.patterns.ISO8601Long},{name:"pwdMustChange",type:"date",dateFormat:Date.patterns.ISO8601Long}];Tine.Admin.Model.SAMUser=Tine.Tinebase.data.Record.create(Tine.Admin.Model.SAMUserArray,{appName:"Admin",modelName:"SAMUser",idProperty:"sid",titleProperty:null,recordName:"Samba User",recordsName:"Samba Users"});Tine.Admin.Model.EmailUserArray=[{name:"emailUID"},{name:"emailGID"},{name:"emailMailQuota"},{name:"emailMailSize"},{name:"emailSieveQuota"},{name:"emailSieveSize"},{name:"emailLastLogin",type:"date",dateFormat:Date.patterns.ISO8601Long},{name:"emailUserId"},{name:"emailAliases"},{name:"emailForwards"},{name:"emailForwardOnly"},{name:"emailAddress"},{name:"emailUsername"}];Tine.Admin.Model.EmailUser=Tine.Tinebase.data.Record.create(Tine.Admin.Model.EmailUserArray,{appName:"Admin",modelName:"EmailUser",idProperty:"sid",titleProperty:null,recordName:"Email User",recordsName:"Email Users"});Tine.Admin.userBackend=new Tine.Tinebase.data.RecordProxy({appName:"Admin",modelName:"User",recordClass:Tine.Admin.Model.User,idProperty:"accountId"});Tine.Admin.samUserBackend=new Tine.Tinebase.data.RecordProxy({appName:"Admin",modelName:"SAMUser",recordClass:Tine.Admin.Model.SAMUser,idProperty:"sid"});Tine.Admin.emailUserBackend=new Tine.Tinebase.data.RecordProxy({appName:"Admin",modelName:"EmailUser",recordClass:Tine.Admin.Model.EmailUser,idProperty:"emailUID"});Tine.Admin.sharedAddressbookBackend=new Tine.Tinebase.data.RecordProxy({appName:"Admin",modelName:"SharedAddressbook",recordClass:Tine.Tinebase.Model.Container,idProperty:"id"});Ext.ns("Tine.Admin.user");Tine.Admin.user.GridPanel=Ext.extend(Tine.widgets.grid.GridPanel,{isLdapBackend:false,newRecordIcon:"action_addContact",recordClass:Tine.Admin.Model.User,recordProxy:Tine.Admin.userBackend,defaultSortInfo:{field:"accountLoginName",direction:"ASC"},evalGrants:false,gridConfig:{id:"gridAdminUsers",autoExpandColumn:"accountDisplayName"},initComponent:function(){this.gridConfig.cm=this.getColumnModel();this.initFilterToolbar();this.plugins=this.plugins||[];this.plugins.push(this.filterToolbar);this.isLdapBackend=Tine.Tinebase.registry.get("accountBackend")=="Ldap";Tine.Admin.user.GridPanel.superclass.initComponent.call(this)},initActions:function(){this.actionEnable=new Ext.Action({requiredGrant:"readGrant",text:this.app.i18n._("Enable Account"),allowMultiple:true,disabled:true,handler:this.enableDisableButtonHandler.createDelegate(this,["enabled"]),iconCls:"action_enable",actionUpdater:this.enableDisableActionUpdater.createDelegate(this,[["disabled","blocked","expired"]],true)});this.actionDisable=new Ext.Action({requiredGrant:"readGrant",text:this.app.i18n._("Disable Account"),allowMultiple:true,disabled:true,handler:this.enableDisableButtonHandler.createDelegate(this,["disabled"]),iconCls:"action_disable",actionUpdater:this.enableDisableActionUpdater.createDelegate(this,[["enabled"]],true)});this.actionResetPassword=new Ext.Action({requiredGrant:"readGrant",text:this.app.i18n._("Reset Password"),disabled:true,handler:this.resetPasswordHandler,iconCls:"action_password",scope:this});this.actionUpdater.addActions([this.actionEnable,this.actionDisable,this.actionResetPassword]);this.supr().initActions.call(this)},initFilterToolbar:function(){this.filterToolbar=new Tine.widgets.grid.FilterToolbar({filterModels:[{label:this.app.i18n.n_("User","Users",1),field:"query",operators:["contains"]}],defaultFilter:"query",filters:[],plugins:[new Tine.widgets.grid.FilterToolbarQuickFilterPlugin()]})},getActionToolbarItems:function(){return[Ext.apply(new Ext.Button(this.actionEnable),{scale:"medium",rowspan:2,iconAlign:"top"}),Ext.apply(new Ext.Button(this.actionDisable),{scale:"medium",rowspan:2,iconAlign:"top"}),Ext.apply(new Ext.Button(this.actionResetPassword),{scale:"medium",rowspan:2,iconAlign:"top"})]},getContextMenuItems:function(){var a=["-",this.actionEnable,this.actionDisable,"-",this.actionResetPassword];return a},getColumnModel:function(){return new Ext.grid.ColumnModel({defaults:{sortable:true,hidden:true,resizable:true},columns:this.getColumns()})},getColumns:function(){return[{header:this.app.i18n._("ID"),id:"accountId",dataIndex:"accountId",width:50},{header:this.app.i18n._("Status"),id:"accountStatus",dataIndex:"accountStatus",hidden:this.isLdapBackend,width:50,renderer:this.statusRenderer},{header:this.app.i18n._("Display name"),id:"accountDisplayName",dataIndex:"accountDisplayName",hidden:false},{header:this.app.i18n._("Login name"),id:"accountLoginName",dataIndex:"accountLoginName",width:160,hidden:false},{header:this.app.i18n._("Last name"),id:"accountLastName",dataIndex:"accountLastName"},{header:this.app.i18n._("First name"),id:"accountFirstName",dataIndex:"accountFirstName"},{header:this.app.i18n._("Email"),id:"accountEmailAddress",dataIndex:"accountEmailAddress",width:200,hidden:false},{header:this.app.i18n._("OpenID"),id:"openid",dataIndex:"openid",width:200},{header:this.app.i18n._("Last login at"),id:"accountLastLogin",dataIndex:"accountLastLogin",hidden:this.isLdapBackend,width:140,renderer:Tine.Tinebase.common.dateTimeRenderer},{header:this.app.i18n._("Last login from"),id:"accountLastLoginfrom",hidden:this.isLdapBackend,dataIndex:"accountLastLoginfrom"},{header:this.app.i18n._("Password changed"),id:"accountLastPasswordChange",dataIndex:"accountLastPasswordChange",width:140,renderer:Tine.Tinebase.common.dateTimeRenderer,hidden:false},{header:this.app.i18n._("Expires"),id:"accountExpires",dataIndex:"accountExpires",width:140,renderer:Tine.Tinebase.common.dateTimeRenderer,hidden:false}]},enableDisableButtonHandler:function(a){var b=new Array();var d=this.grid.getSelectionModel().getSelections();for(var c=0;c<d.length;++c){b.push(d[c].id)}Ext.Ajax.request({url:"index.php",method:"post",params:{method:"Admin.setAccountState",accountIds:b,status:a},scope:this,callback:function(f,h,g){if(h===true){var e=Ext.util.JSON.decode(g.responseText);if(e.success===true){this.loadGridData({removeStrategy:"keepBuffered"})}}}})},enableDisableActionUpdater:function(e,a,b,d){var c=b.length>0;Ext.each(b,function(f){c&=d.indexOf(f.get("accountStatus"))>=0;return c},this);e.setDisabled(!c)},resetPasswordHandler:function(b,a){Ext.MessageBox.prompt(this.app.i18n._("Set new password"),this.app.i18n._("Please enter the new password:"),function(e,d){if(e=="ok"){var c=this.grid.getSelectionModel().getSelected().data;Ext.Ajax.request({params:{method:"Admin.resetPassword",account:c,password:d,mustChange:false},scope:this,callback:function(g,i,h){if(i===true){var f=Ext.util.JSON.decode(h.responseText);if(f.success===true){this.grid.getStore().reload()}}else{Tine.Tinebase.ExceptionHandler.handleRequestException(h)}}})}},this)},statusRenderer:function(b,g,e,a,c,d){var f;switch(b){case"blocked":f="<img src='images/oxygen/16x16/status/security-medium.png' width='12' height='12'/>";break;case"enabled":f="<img src='images/oxygen/16x16/actions/dialog-apply.png' width='12' height='12'/>";break;case"disabled":f="<img src='images/oxygen/16x16/actions/dialog-cancel.png' width='12' height='12'/>";break;case"expired":f="<img src='images/oxygen/16x16/status/user-away.png' width='12' height='12'/>";break;default:f=b;break}return f}});Ext.ns("Tine.Admin.user");Tine.Admin.UserEditDialog=Ext.extend(Tine.widgets.dialog.EditDialog,{windowNamePrefix:"userEditWindow_",appName:"Admin",recordClass:Tine.Admin.Model.User,recordProxy:Tine.Admin.userBackend,evalGrants:false,initComponent:function(){var a=Tine.Tinebase.registry.get("accountBackend");this.ldapBackend=(a==="Ldap");Tine.Admin.UserEditDialog.superclass.initComponent.call(this)},onRecordLoad:function(){if(!this.rendered){this.onRecordLoad.defer(250,this);return}var a={responseText:Ext.util.JSON.encode(this.record.get("sambaSAM"))};this.samRecord=Tine.Admin.samUserBackend.recordReader(a);var b={responseText:Ext.util.JSON.encode(this.record.get("emailUser"))};this.emailRecord=Tine.Admin.emailUserBackend.recordReader(b);var d=["accountLastLogin","accountLastPasswordChange","logonTime","logoffTime","pwdLastSet"];for(var c=0;c<d.length;c+=1){if(d[c]==="accountLastLogin"||d[c]==="accountLastPasswordChange"){this.record.set(d[c],Tine.Tinebase.common.dateTimeRenderer(this.record.get(d[c])))}else{this.samRecord.set(d[c],Tine.Tinebase.common.dateTimeRenderer(this.samRecord.get(d[c])))}}this.getForm().loadRecord(this.emailRecord);this.getForm().loadRecord(this.samRecord);this.record.set("sambaSAM",this.samRecord.data);if(Tine.Admin.registry.get("manageSmtpEmailUser")){if(this.emailRecord.get("emailAliases")){this.aliasesGrid.setStoreFromArray(this.emailRecord.get("emailAliases"))}if(this.emailRecord.get("emailForwards")){this.forwardsGrid.setStoreFromArray(this.emailRecord.get("emailForwards"))}}if(this.record.id){this.storeGroups.loadData(this.record.get("groups"));this.storeRoles.loadData(this.record.get("accountRoles"))}Tine.Admin.UserEditDialog.superclass.onRecordLoad.call(this)},onRecordUpdate:function(){Tine.Admin.UserEditDialog.superclass.onRecordUpdate.call(this);Tine.log.debug("Tine.Admin.UserEditDialog::onRecordUpdate()");var c=this.getForm();c.updateRecord(this.samRecord);if(this.samRecord.dirty){this.unsetLocalizedDateTimeFields(this.samRecord,["logonTime","logoffTime","pwdLastSet"]);this.record.set("sambaSAM","");this.record.set("sambaSAM",this.samRecord.data)}c.updateRecord(this.emailRecord);if(Tine.Admin.registry.get("manageSmtpEmailUser")){this.aliasesGrid.doBlur();this.forwardsGrid.doBlur();this.emailRecord.set("emailAliases",this.aliasesGrid.getFromStoreAsArray());this.emailRecord.set("emailForwards",this.forwardsGrid.getFromStoreAsArray());Tine.log.debug("Tine.Admin.UserEditDialog::onRecordUpdate() -> setting aliases and forwards in email record");Tine.log.debug(this.emailRecord)}this.unsetLocalizedDateTimeFields(this.emailRecord,["emailLastLogin"]);this.record.set("emailUser","");this.record.set("emailUser",this.emailRecord.data);var a=[],b=[];this.storeGroups.each(function(d){a.push(d.data.id)});if(a.indexOf(this.record.get("accountPrimaryGroup"))===-1){a.push(this.record.get("accountPrimaryGroup"))}this.storeRoles.each(function(d){b.push(d.data.id)});this.record.set("groups",a);this.record.set("accountRoles",b);this.unsetLocalizedDateTimeFields(this.record,["accountLastLogin","accountLastPasswordChange"])},unsetLocalizedDateTimeFields:function(a,b){Ext.each(b,function(c){a.set(c,"")},this)},isValid:function(){var a=Tine.Admin.UserEditDialog.superclass.isValid.call(this);if(!a){return false}if(Tine.Admin.registry.get("manageSmtpEmailUser")){var b=this.getForm().findField("accountEmailAddress").getValue();if(!this.checkEmailDomain(b)){a=false;this.getForm().markInvalid([{id:"accountEmailAddress",msg:this.app.i18n._("Domain is not allowed. Check your SMTP domain configuration.")}])}}return a},checkEmailDomain:function(b){if(!Tine.Admin.registry.get("primarydomain")||!b){return true}var c=[Tine.Admin.registry.get("primarydomain")],a=b.split("@")[1];if(Ext.isString(Tine.Admin.registry.get("secondarydomains"))){c=c.concat(Tine.Admin.registry.get("secondarydomains").split(","))}return(c.indexOf(a)!==-1)},onPasswordConfirm:function(){var b=this.passwordConfirmWindow.items.first().getForm(),d=b.getValues(),a=b.findField("passwordStatus"),c=(this.getForm())?this.getForm().findField("accountPassword"):null;if(!c){return false}if(d.passwordRepeat!==c.getValue()){a.el.setStyle("color","red");a.setValue(this.app.i18n.gettext("Passwords do not match!"));c.passwordsMatch=false;c.markInvalid(this.app.i18n.gettext("Passwords do not match!"))}else{a.el.setStyle("color","green");a.setValue(this.app.i18n.gettext("Passwords match!"));c.passwordsMatch=true;c.clearInvalid()}return c.passwordsMatch?c.passwordsMatch:a.getValue()},getCurrentPrimaryGroupId:function(){return this.getForm().findField("accountPrimaryGroup").getValue()||this.record.get("accountPrimaryGroup").id},initUserGroups:function(){this.storeGroups=new Ext.data.JsonStore({root:"results",totalProperty:"totalcount",id:"id",fields:Tine.Admin.Model.Group});var a=this;this.pickerGridGroups=new Tine.widgets.account.PickerGridPanel({border:false,frame:false,store:this.storeGroups,selectType:"group",selectAnyone:false,selectTypeDefault:"group",groupRecordClass:Tine.Admin.Model.Group,getColumnModel:function(){return new Ext.grid.ColumnModel({defaults:{sortable:true},columns:[{id:"name",header:_("Name"),dataIndex:this.recordPrefix+"name",renderer:function(d,c,b){return b.data.id===a.getCurrentPrimaryGroupId()?(b.data.name+'<span class="x-item-disabled"> ('+a.app.i18n.gettext("Primary group")+")<span>"):b.data.name}}]})}});this.pickerGridGroups.selModel.on("beforerowselect",function(e,d,c,b){if(b.data.id===this.getCurrentPrimaryGroupId()){return false}},this);return this.pickerGridGroups},initUserRoles:function(){this.storeRoles=new Ext.data.JsonStore({root:"results",totalProperty:"totalcount",id:"id",fields:Tine.Tinebase.Model.Role});this.pickerGridRoles=new Tine.widgets.grid.PickerGridPanel({border:false,frame:false,autoExpandColumn:"name",store:this.storeRoles,recordClass:Tine.Tinebase.Model.Role,columns:[{id:"name",header:Tine.Tinebase.translation.gettext("Name"),sortable:true,dataIndex:"name"}],initActionsAndToolbars:function(){},onAddRecordFromCombo:function(a){if(!this.recordStore.getById(a.id)){this.recordStore.add([a])}this.collapse();this.clearValue();this.reset()}});this.pickerGridRoles.selModel.purgeListeners();return this.pickerGridRoles},initFileserver:function(){if(this.ldapBackend){return[{xtype:"fieldset",title:this.app.i18n.gettext("Unix"),autoHeight:true,checkboxToggle:false,layout:"hfit",items:[{xtype:"columnform",labelAlign:"top",formDefaults:{xtype:"textfield",anchor:"100%",labelSeparator:"",columnWidth:0.333},items:[[{fieldLabel:this.app.i18n.gettext("Home Directory"),name:"accountHomeDirectory",columnWidth:0.666},{fieldLabel:this.app.i18n.gettext("Login Shell"),name:"accountLoginShell"}]]}]},{xtype:"fieldset",title:this.app.i18n.gettext("Windows"),autoHeight:true,checkboxToggle:false,layout:"hfit",items:[{xtype:"columnform",labelAlign:"top",formDefaults:{xtype:"textfield",anchor:"100%",labelSeparator:"",columnWidth:0.333},items:[[{fieldLabel:this.app.i18n.gettext("Home Drive"),name:"homeDrive",columnWidth:0.666},{xtype:"displayfield",fieldLabel:this.app.i18n.gettext("Logon Time"),name:"logonTime",emptyText:this.app.i18n.gettext("never logged in"),style:this.displayFieldStyle}],[{fieldLabel:this.app.i18n.gettext("Home Path"),name:"homePath",columnWidth:0.666},{xtype:"displayfield",fieldLabel:this.app.i18n.gettext("Logoff Time"),name:"logoffTime",emptyText:this.app.i18n.gettext("never logged off"),style:this.displayFieldStyle}],[{fieldLabel:this.app.i18n.gettext("Profile Path"),name:"profilePath",columnWidth:0.666},{xtype:"displayfield",fieldLabel:this.app.i18n.gettext("Password Last Set"),name:"pwdLastSet",emptyText:this.app.i18n.gettext("never"),style:this.displayFieldStyle}],[{fieldLabel:this.app.i18n.gettext("Logon Script"),name:"logonScript",columnWidth:0.666}],[{xtype:"extuxclearabledatefield",fieldLabel:this.app.i18n.gettext("Password Can Change"),name:"pwdCanChange",emptyText:this.app.i18n.gettext("not set")},{xtype:"extuxclearabledatefield",fieldLabel:this.app.i18n.gettext("Password Must Change"),name:"pwdMustChange",emptyText:this.app.i18n.gettext("not set")},{xtype:"extuxclearabledatefield",fieldLabel:this.app.i18n.gettext("Kick Off Time"),name:"kickoffTime",emptyText:this.app.i18n.gettext("not set")}]]}]}]}return[]},initImap:function(){if(Tine.Admin.registry.get("manageImapEmailUser")){return[{xtype:"fieldset",title:this.app.i18n.gettext("IMAP Quota (MB)"),autoHeight:true,checkboxToggle:true,layout:"hfit",listeners:{scope:this,collapse:function(){this.getForm().findField("emailMailQuota").setValue(null)}},items:[{xtype:"columnform",labelAlign:"top",formDefaults:{xtype:"textfield",anchor:"100%",columnWidth:0.666},items:[[{fieldLabel:this.app.i18n.gettext("Quota"),emptyText:this.app.i18n.gettext("no quota set"),name:"emailMailQuota",xtype:"uxspinner",strategy:new Ext.ux.form.Spinner.NumberStrategy({incrementValue:10,alternateIncrementValue:50,minValue:0,allowDecimals:false})}],[{fieldLabel:this.app.i18n.gettext("Current Mailbox size"),name:"emailMailSize",xtype:"displayfield",style:this.displayFieldStyle}]]}]},{xtype:"fieldset",title:this.app.i18n.gettext("Sieve Quota (MB)"),autoHeight:true,checkboxToggle:true,layout:"hfit",listeners:{scope:this,collapse:function(){this.getForm().findField("emailSieveQuota").setValue(null)}},items:[{xtype:"columnform",labelAlign:"top",formDefaults:{xtype:"textfield",anchor:"100%",columnWidth:0.666},items:[[{fieldLabel:this.app.i18n.gettext("Quota"),emptyText:this.app.i18n.gettext("no quota set"),name:"emailSieveQuota",xtype:"uxspinner",strategy:new Ext.ux.form.Spinner.NumberStrategy({incrementValue:10,alternateIncrementValue:50,minValue:0,allowDecimals:false})}],[{fieldLabel:this.app.i18n.gettext("Current Sieve size"),name:"emailSieveSize",xtype:"displayfield",style:this.displayFieldStyle}]]}]},{xtype:"fieldset",title:this.app.i18n.gettext("Information"),autoHeight:true,checkboxToggle:false,layout:"hfit",items:[{xtype:"columnform",labelAlign:"top",formDefaults:{xtype:"displayfield",anchor:"100%",columnWidth:0.666,style:this.displayFieldStyle},items:[[{fieldLabel:this.app.i18n.gettext("Last Login"),name:"emailLastLogin"}]]}]}]}return[]},initSmtp:function(){if(!Tine.Admin.registry.get("manageSmtpEmailUser")){return[]}var d={autoExpandColumn:"email",quickaddMandatory:"email",frame:false,useBBar:true,dataField:"email",height:200,columnWidth:0.5,recordClass:Ext.data.Record.create([{name:"email"}])};var e=Tine.Felamimail.registry.get("defaults").smtp;var a=(e.secondarydomains&&e.secondarydomains.length)?e.secondarydomains.split(","):[];if(e.primarydomain.length){a.push(e.primarydomain)}var f=this.app,b=this.record;this.aliasesGrid=new Tine.widgets.grid.QuickaddGridPanel(Ext.apply({onNewentry:function(h){var g=h.email.split("@")[1];if(a.indexOf(g)>-1){Tine.widgets.grid.QuickaddGridPanel.prototype.onNewentry.call(this,h)}else{Ext.MessageBox.show({buttons:Ext.Msg.OK,icon:Ext.MessageBox.WARNING,title:f.i18n._("Domain not allowed"),msg:String.format(f.i18n._("The domain {0} of the alias {1} you tried to add is neither configured as primary domain nor set as a secondary domain in the setup. Please add this domain to the secondary domains in SMTP setup or use another domain which is configured already."),"<b>"+g+"</b>","<b>"+h.email+"</b>")});return false}},cm:new Ext.grid.ColumnModel([{id:"email",header:this.app.i18n.gettext("Email Alias"),dataIndex:"email",width:300,hideable:false,sortable:true,quickaddField:new Ext.form.TextField({emptyText:this.app.i18n.gettext("Add an alias address..."),vtype:"email"}),editor:new Ext.form.TextField({allowBlank:false})}])},d));this.aliasesGrid.render(document.body);var c=this.aliasesGrid.getStore();this.forwardsGrid=new Tine.widgets.grid.QuickaddGridPanel(Ext.apply({onNewentry:function(g){if(g.email===b.get("accountEmailAddress")||c.find("email",g.email)!==-1){Ext.MessageBox.show({buttons:Ext.Msg.OK,icon:Ext.MessageBox.WARNING,title:f.i18n._("Forwarding to self"),msg:f.i18n._("You are not allowed to set a forward email address that is identical to the users primary email or one of his aliases.")});return false}else{Tine.widgets.grid.QuickaddGridPanel.prototype.onNewentry.call(this,g)}},cm:new Ext.grid.ColumnModel([{id:"email",header:this.app.i18n.gettext("Email Forward"),dataIndex:"email",width:300,hideable:false,sortable:true,quickaddField:new Ext.form.TextField({emptyText:this.app.i18n.gettext("Add a forward address..."),vtype:"email"}),editor:new Ext.form.TextField({allowBlank:false})}])},d));this.forwardsGrid.render(document.body);return[[this.aliasesGrid,this.forwardsGrid],[{hidden:true},{fieldLabel:this.app.i18n.gettext("Forward Only"),name:"emailForwardOnly",xtype:"checkbox",readOnly:false}]]},getFormItems:function(){this.displayFieldStyle={border:"silver 1px solid",padding:"3px",height:"11px"};this.passwordConfirmWindow=new Ext.Window({title:this.app.i18n.gettext("Password confirmation"),closeAction:"hide",modal:true,width:300,height:150,items:[{xtype:"form",bodyStyle:"padding: 5px;",buttonAlign:"right",labelAlign:"top",anchor:"100%",monitorValid:true,defaults:{anchor:"100%"},items:[{xtype:"textfield",inputType:"password",id:"passwordRepeat",fieldLabel:this.app.i18n.gettext("Repeat password"),name:"passwordRepeat",validator:this.onPasswordConfirm.createDelegate(this),listeners:{scope:this,specialkey:function(b,a){if(a.getKey()===a.ENTER){this.passwordConfirmWindow.items.first().buttons[1].handler.call(this)}}}},{xtype:"displayfield",hideLabel:true,id:"passwordStatus",value:this.app.i18n.gettext("Passwords do not match!")}],buttons:[{text:_("Cancel"),iconCls:"action_cancel",scope:this,handler:function(){this.passwordConfirmWindow.hide()}},{text:_("Ok"),formBind:true,iconCls:"action_saveAndClose",scope:this,handler:function(){var a=this.passwordConfirmWindow.items.first().getForm();if(a.isValid()){this.passwordConfirmWindow.hide();this.getForm().findField("accountEmailAddress").focus(true,100)}}}]}],listeners:{scope:this,show:function(b){var a=this.passwordConfirmWindow.items.first().getForm();a.reset();a.findField("passwordRepeat").focus(true,500)}}});this.passwordConfirmWindow.render(document.body);return{xtype:"tabpanel",deferredRender:false,border:false,plain:true,activeTab:0,items:[{title:this.app.i18n.gettext("Account"),autoScroll:true,border:false,frame:true,layout:"hfit",items:[{xtype:"columnform",labelAlign:"top",formDefaults:{xtype:"textfield",anchor:"100%",labelSeparator:"",columnWidth:0.333},items:[[{fieldLabel:this.app.i18n.gettext("First name"),name:"accountFirstName",columnWidth:0.5,listeners:{render:function(a){a.focus(false,250);a.selectText()}}},{fieldLabel:this.app.i18n.gettext("Last name"),name:"accountLastName",allowBlank:false,columnWidth:0.5}],[{fieldLabel:this.app.i18n.gettext("Login name"),name:"accountLoginName",allowBlank:false,columnWidth:0.5},{fieldLabel:this.app.i18n.gettext("Password"),id:"accountPassword",name:"accountPassword",inputType:"password",columnWidth:0.5,passwordsMatch:true,enableKeyEvents:true,listeners:{scope:this,blur:function(b){var a=b.getValue();if(a!==""){this.passwordConfirmWindow.show.defer(100,this.passwordConfirmWindow)}},destroy:function(){this.passwordConfirmWindow.destroy()},keydown:function(a){a.passwordsMatch=false}},validateValue:function(a){return this.passwordsMatch}}],[{vtype:"email",fieldLabel:this.app.i18n.gettext("Email"),name:"accountEmailAddress",id:"accountEmailAddress",columnWidth:0.5},{fieldLabel:this.app.i18n.gettext("OpenID"),emptyText:"("+this.app.i18n.gettext("Login name")+")",name:"openid",columnWidth:0.5}],[{xtype:"tinerecordpickercombobox",fieldLabel:this.app.i18n.gettext("Primary group"),listWidth:250,name:"accountPrimaryGroup",blurOnSelect:true,allowBlank:false,recordClass:Tine.Admin.Model.Group,listeners:{scope:this,select:function(c,a,b){if(this.pickerGridGroups){this.pickerGridGroups.getView().refresh()}}}},{xtype:"combo",fieldLabel:this.app.i18n.gettext("Status"),name:"accountStatus",mode:"local",triggerAction:"all",allowBlank:false,editable:false,store:[["enabled",this.app.i18n.gettext("enabled")],["disabled",this.app.i18n.gettext("disabled")],["expired",this.app.i18n.gettext("expired")],["blocked",this.app.i18n.gettext("blocked")]],listeners:{scope:this,select:function(e,b){switch(b.data.field1){case"blocked":Ext.Msg.alert(this.app.i18n._("Invalid Status"),this.app.i18n._("Blocked status is only valid if the user tried to login with a wrong password to often. It is not possible to set this status here."));e.setValue(e.startValue);break;case"expired":this.getForm().findField("accountExpires").setValue(new Date());break;case"enabled":var d=this.getForm().findField("accountExpires"),a=d.getValue(),c=new Date();if(a<c){d.setValue("")}break;default:}}}},{xtype:"extuxclearabledatefield",fieldLabel:this.app.i18n.gettext("Expires"),name:"accountExpires",emptyText:this.app.i18n.gettext("never")}],[{xtype:"combo",fieldLabel:this.app.i18n.gettext("Visibility"),name:"visibility",mode:"local",triggerAction:"all",allowBlank:false,editable:false,store:[["displayed",this.app.i18n.gettext("Display in addressbook")],["hidden",this.app.i18n.gettext("Hide from addressbook")]],listeners:{scope:this,select:function(c,a){var b=this.getForm().findField("container_id");b.setDisabled(a.data.field1==="hidden");if(b.getValue()===""){b.setValue(null)}}}},{xtype:"tinerecordpickercombobox",fieldLabel:this.app.i18n.gettext("Saved in Addressbook"),name:"container_id",blurOnSelect:true,allowBlank:false,forceSelection:true,listWidth:250,recordClass:Tine.Tinebase.Model.Container,disabled:this.record.get("visibility")==="hidden",recordProxy:Tine.Admin.sharedAddressbookBackend}]]},{xtype:"fieldset",title:this.app.i18n.gettext("Information"),autoHeight:true,checkboxToggle:false,layout:"hfit",items:[{xtype:"columnform",labelAlign:"top",formDefaults:{xtype:"displayfield",anchor:"100%",labelSeparator:"",columnWidth:0.333,style:this.displayFieldStyle},items:[[{fieldLabel:this.app.i18n.gettext("Last login at"),name:"accountLastLogin",emptyText:this.ldapBackend?this.app.i18n.gettext("don't know"):this.app.i18n.gettext("never logged in")},{fieldLabel:this.app.i18n.gettext("Last login from"),name:"accountLastLoginfrom",emptyText:this.ldapBackend?this.app.i18n.gettext("don't know"):this.app.i18n.gettext("never logged in")},{fieldLabel:this.app.i18n.gettext("Password set"),name:"accountLastPasswordChange",emptyText:this.app.i18n.gettext("never")}]]}]}]},{title:this.app.i18n.gettext("User groups"),border:false,frame:true,layout:"fit",items:this.initUserGroups()},{title:this.app.i18n.gettext("User roles"),border:false,frame:true,layout:"fit",items:this.initUserRoles()},{title:this.app.i18n.gettext("Fileserver"),disabled:!this.ldapBackend,border:false,frame:true,items:this.initFileserver()},{title:this.app.i18n.gettext("IMAP"),disabled:!Tine.Admin.registry.get("manageImapEmailUser"),autoScroll:true,border:false,frame:true,layout:"hfit",items:this.initImap()},{xtype:"columnform",title:this.app.i18n.gettext("SMTP"),disabled:!Tine.Admin.registry.get("manageSmtpEmailUser"),border:false,frame:true,labelAlign:"top",formDefaults:{xtype:"textfield",anchor:"100%",labelSeparator:"",columnWidth:0.5,readOnly:true},items:this.initSmtp()}]}}});Tine.Admin.UserEditDialog.openWindow=function(a){var c=(a.record&&a.record.id)?a.record.id:0;var b=Tine.WindowFactory.getWindow({width:600,height:400,name:Tine.Admin.UserEditDialog.prototype.windowNamePrefix+c,contentPanelConstructor:"Tine.Admin.UserEditDialog",contentPanelConstructorConfig:a});return b};Ext.ns("Tine.Admin.Groups");Tine.Admin.Groups.Main={groupsToolbar:null,gridPanel:null,actions:{addGroup:null,editGroup:null,deleteGroup:null},handlers:{addGroup:function(a,b){this.openEditWindow(null)},editGroup:function(a,b){var c=Ext.getCmp("AdminGroupsGrid").getSelectionModel().getSelections();this.openEditWindow(c[0])},deleteGroup:function(a,b){Ext.MessageBox.confirm(this.translation.gettext("Confirm"),this.translation.gettext("Do you really want to delete the selected groups?"),function(e){if(e==="yes"){var c=[],f=Ext.getCmp("AdminGroupsGrid").getSelectionModel().getSelections();for(var d=0;d<f.length;++d){c.push(f[d].id)}Ext.Ajax.request({url:"index.php",params:{method:"Admin.deleteGroups",groupIds:c},scope:this,text:this.translation.gettext("Deleting group(s)..."),success:function(g,h){Ext.getCmp("AdminGroupsGrid").getStore().reload()},failure:function(g,h){Ext.MessageBox.alert(this.translation.gettext("Failed"),this.translation.gettext("Some error occurred while trying to delete the group."))}})}},this)}},openEditWindow:function(a){var b=Tine.Admin.Groups.EditDialog.openWindow({group:a,listeners:{scope:this,update:function(c){this.reload()}}})},initComponent:function(){this.translation=new Locale.Gettext();this.translation.textdomain("Admin");this.actions.addGroup=new Ext.Action({text:this.translation.gettext("Add Group"),disabled:true,handler:this.handlers.addGroup,iconCls:"action_addGroup",scope:this});this.actions.editGroup=new Ext.Action({text:this.translation.gettext("Edit Group"),disabled:true,handler:this.handlers.editGroup,iconCls:"action_edit",scope:this});this.actions.deleteGroup=new Ext.Action({text:this.translation.gettext("Delete Group"),disabled:true,handler:this.handlers.deleteGroup,iconCls:"action_delete",scope:this})},displayGroupsToolbar:function(){if(this.groupsToolbar){Tine.Tinebase.MainScreen.setActiveToolbar(this.groupsToolbar,true);return}var a=new Ext.ux.SearchField({id:"GroupsAdminQuickSearchField",width:240,emptyText:Tine.Tinebase.translation._hidden("enter searchfilter")});a.on("change",function(){Ext.getCmp("AdminGroupsGrid").getStore().load({params:{start:0,limit:50}})},this);this.groupsToolbar=new Ext.Toolbar({id:"AdminGroupsToolbar",split:false,items:[{xtype:"buttongroup",columns:5,items:[Ext.apply(new Ext.Button(this.actions.addGroup),{scale:"medium",rowspan:2,iconAlign:"top"}),{xtype:"tbspacer",width:10},Ext.apply(new Ext.Button(this.actions.editGroup),{scale:"medium",rowspan:2,iconAlign:"top"}),{xtype:"tbspacer",width:10},Ext.apply(new Ext.Button(this.actions.deleteGroup),{scale:"medium",rowspan:2,iconAlign:"top"})]},"->",this.translation.gettext("Search:")," ",a]});Tine.Tinebase.MainScreen.setActiveToolbar(this.groupsToolbar,true)},displayGroupsGrid:function(){if(this.gridPanel){Tine.Tinebase.MainScreen.setActiveContentPanel(this.gridPanel,true);return}if(Tine.Tinebase.common.hasRight("manage","Admin","accounts")){this.actions.addGroup.setDisabled(false)}var a=new Ext.data.JsonStore({baseParams:{method:"Admin.getGroups"},root:"results",totalProperty:"totalcount",id:"id",fields:Tine.Admin.Model.Group,remoteSort:true});a.setDefaultSort("id","asc");a.on("beforeload",function(f,e){e=e||{};e.params=e.params||{};e.params.filter=Ext.getCmp("GroupsAdminQuickSearchField").getValue()},this);var d=new Ext.PagingToolbar({pageSize:25,store:a,displayInfo:true,displayMsg:this.translation.gettext("Displaying groups {0} - {1} of {2}"),emptyMsg:this.translation.gettext("No groups to display")});var c=new Ext.grid.ColumnModel({defaults:{sortable:true,resizable:true},columns:[{id:"id",header:this.translation.gettext("ID"),dataIndex:"id",width:50,hidden:true},{id:"name",header:this.translation.gettext("Name"),dataIndex:"name",width:50},{id:"description",header:this.translation.gettext("Description"),dataIndex:"description"}]});var b=new Ext.grid.RowSelectionModel({multiSelect:true});b.on("selectionchange",function(e){var f=e.getCount();if(Tine.Tinebase.common.hasRight("manage","Admin","accounts")){if(f<1){this.actions.deleteGroup.setDisabled(true);this.actions.editGroup.setDisabled(true)}else{if(f>1){this.actions.deleteGroup.setDisabled(false);this.actions.editGroup.setDisabled(true)}else{this.actions.deleteGroup.setDisabled(false);this.actions.editGroup.setDisabled(false)}}}},this);this.gridPanel=new Ext.grid.GridPanel({id:"AdminGroupsGrid",store:a,cm:c,tbar:d,autoSizeColumns:false,selModel:b,enableColLock:false,autoExpandColumn:"n_family",border:false,view:new Ext.grid.GridView({autoFill:true,forceFit:true,ignoreAdd:true,emptyText:this.translation.gettext("No groups to display")}),enableHdMenu:false,plugins:[new Ext.ux.grid.GridViewMenuPlugin()]});this.gridPanel.on("rowcontextmenu",function(f,g,e){e.stopEvent();if(!f.getSelectionModel().isSelected(g)){f.getSelectionModel().selectRow(g)}if(!this.contextMenu){this.contextMenu=new Ext.menu.Menu({id:"ctxMenuGroups",items:[this.actions.editGroup,this.actions.deleteGroup,"-",this.actions.addGroup]})}this.contextMenu.showAt(e.getXY())},this);this.gridPanel.on("rowdblclick",function(f,h,g){if(Tine.Tinebase.common.hasRight("manage","Admin","accounts")){var e=f.getStore().getAt(h);this.openEditWindow(e)}},this);Tine.Tinebase.MainScreen.setActiveContentPanel(this.gridPanel,true)},loadData:function(){var a=Ext.getCmp("AdminGroupsGrid").getStore();a.load({params:{start:0,limit:50}})},show:function(){if(this.groupsToolbar===null||this.gridPanel===null){this.initComponent()}this.displayGroupsToolbar();this.displayGroupsGrid();this.loadData()},reload:function(){if(Ext.ComponentMgr.all.containsKey("AdminGroupsGrid")){setTimeout("Ext.getCmp('AdminGroupsGrid').getStore().reload()",200)}}};Ext.ns("Tine.Admin.Groups");Tine.Admin.Groups.EditDialog=Ext.extend(Tine.widgets.dialog.EditRecord,{group:null,windowNamePrefix:"groupEditWindow_",id:"groupDialog",layout:"fit",border:false,labelWidth:120,labelAlign:"top",handlerApplyChanges:function(b,e,d){var c=this.getForm();if(c.isValid()){Ext.MessageBox.wait(this.translation.gettext("Please wait"),this.translation.gettext("Updating Memberships"));var a=[];this.membersStore.each(function(f){a.push(f.id)});c.updateRecord(this.group);Ext.Ajax.request({params:{method:"Admin.saveGroup",groupData:this.group.data,groupMembers:a},success:function(f){this.fireEvent("update",Ext.util.JSON.encode(this.group.data));if(d===true){this.window.close()}else{this.onRecordLoad(f)}Ext.MessageBox.hide()},failure:function(f,g){Ext.MessageBox.alert(this.translation.gettext("Failed"),this.translation.gettext("Could not save group."))},scope:this})}else{Ext.MessageBox.alert(this.translation.gettext("Errors"),this.translation.gettext("Please fix the errors noted."))}},updateRecord:function(a){if(a.length===0){a={}}this.group=new Tine.Admin.Model.Group(a,a.id?a.id:0);this.membersStore.loadData(this.group.get("groupMembers"))},updateToolbarButtons:function(a){},getFormContents:function(){var a={layout:"border",border:false,width:600,height:500,items:[{region:"north",xtype:"columnform",border:false,autoHeight:true,items:[[{columnWidth:1,xtype:"textfield",fieldLabel:this.translation.gettext("Group Name"),name:"name",anchor:"100%",allowBlank:false}],[{columnWidth:1,xtype:"textarea",name:"description",fieldLabel:this.translation.gettext("Description"),grow:false,preventScrollbars:false,anchor:"100%",height:60}],[{columnWidth:0.5,xtype:"combo",fieldLabel:this.translation.gettext("Visibility"),name:"visibility",mode:"local",triggerAction:"all",allowBlank:false,editable:false,store:[["displayed",this.translation.gettext("Display in addressbook")],["hidden",this.translation.gettext("Hide from addressbook")]],listeners:{scope:this,select:function(c,b){this.getForm().findField("container_id").setDisabled(b.data.field1==="hidden");if(b.data.field1==="hidden"){this.getForm().findField("container_id").clearInvalid()}else{this.getForm().findField("container_id").isValid()}}}},{columnWidth:0.5,xtype:"tinerecordpickercombobox",fieldLabel:this.translation.gettext("Saved in Addressbook"),name:"container_id",blurOnSelect:true,allowBlank:false,listWidth:250,recordClass:Tine.Tinebase.Model.Container,recordProxy:Tine.Admin.sharedAddressbookBackend,disabled:this.group.get("visibility")==="hidden"}]]},{xtype:"tinerecordpickergrid",title:this.translation.gettext("Group Members"),store:this.membersStore,region:"center",anchor:"100% 100%",showHidden:true}]};return a},initComponent:function(){this.translation=new Locale.Gettext();this.translation.textdomain("Admin");this.group=this.group?this.group:new Tine.Admin.Model.Group({},0);if(this.group.id!==0){Ext.Ajax.request({scope:this,success:this.onRecordLoad,params:{method:"Admin.getGroup",groupId:this.group.id}})}else{this.group=new Tine.Admin.Model.Group(Tine.Admin.Model.Group.getDefaultData(),0)}this.membersStore=new Ext.data.JsonStore({root:"results",totalProperty:"totalcount",id:"id",fields:Tine.Tinebase.Model.Account});this.items=this.getFormContents();Tine.Admin.Groups.EditDialog.superclass.initComponent.call(this)},onRender:function(b,a){Tine.widgets.dialog.EditDialog.superclass.onRender.call(this,b,a);var c=new Ext.KeyMap(this.el,[{key:[10,13],ctrl:true,fn:this.handlerApplyChanges.createDelegate(this,[true],true),scope:this}]);this.loadMask=new Ext.LoadMask(b,{msg:String.format(_("Transferring {0}..."),this.translation.gettext("Group"))});if(this.group.id!==0){this.loadMask.show()}else{this.window.setTitle(this.translation.gettext("Add new group"));this.getForm().loadRecord(this.group)}},onRecordLoad:function(b){this.getForm().findField("name").focus(false,350);var a=Ext.util.JSON.decode(b.responseText);this.updateRecord(a);if(!this.group.id){this.window.setTitle(this.translation.gettext("Add new group"))}else{this.window.setTitle(String.format(this.translation.gettext('Edit Group "{0}"'),this.group.get("name")))}this.getForm().loadRecord(this.group);this.updateToolbarButtons();this.loadMask.hide()}});Tine.Admin.Groups.EditDialog.openWindow=function(a){a.group=a.group?a.group:new Tine.Admin.Model.Group({},0);var b=Tine.WindowFactory.getWindow({width:400,height:600,name:Tine.Admin.Groups.EditDialog.prototype.windowNamePrefix+a.group.id,contentPanelConstructor:"Tine.Admin.Groups.EditDialog",contentPanelConstructorConfig:a});return b};Ext.ns("Tine.Admin.accessLog");Tine.Admin.accessLog.show=function(){var a=Tine.Tinebase.appMgr.get("Admin");if(!Tine.Admin.accessLog.gridPanel){Tine.Admin.accessLog.gridPanel=new Tine.Admin.accessLog.GridPanel({app:a})}else{Tine.Admin.accessLog.gridPanel.loadGridData.defer(100,Tine.Admin.accessLog.gridPanel,[])}Tine.Tinebase.MainScreen.setActiveContentPanel(Tine.Admin.accessLog.gridPanel,true);Tine.Tinebase.MainScreen.setActiveToolbar(Tine.Admin.accessLog.gridPanel.actionToolbar,true)};Tine.Admin.accessLog.GridPanel=Ext.extend(Tine.widgets.grid.GridPanel,{recordClass:Tine.Admin.Model.AccessLog,recordProxy:Tine.Admin.accessLogBackend,defaultSortInfo:{field:"li",direction:"DESC"},evalGrants:false,gridConfig:{id:"gridAdminAccessLogs",autoExpandColumn:"login_name"},initComponent:function(){this.gridConfig.columns=this.getColumns();this.initFilterToolbar();this.plugins=this.plugins||[];this.plugins.push(this.filterToolbar);Tine.Admin.accessLog.GridPanel.superclass.initComponent.call(this)},initActions:function(){this.initDeleteAction();this.actionUpdater.addActions([this.action_deleteRecord]);this.actionToolbar=new Ext.Toolbar({items:[{xtype:"buttongroup",columns:1,items:[Ext.apply(new Ext.Button(this.action_deleteRecord),{scale:"medium",rowspan:2,iconAlign:"top",arrowAlign:"right"})]}]});if(this.filterToolbar&&typeof this.filterToolbar.getQuickFilterField=="function"){this.actionToolbar.add("->",this.filterToolbar.getQuickFilterField())}this.contextMenu=new Ext.menu.Menu({items:[this.action_deleteRecord]})},initFilterToolbar:function(){this.filterToolbar=new Tine.widgets.grid.FilterToolbar({filterModels:[{label:this.app.i18n._("Access Log"),field:"query",operators:["contains"]},{label:this.app.i18n._("IP Address"),field:"ip"},{label:this.app.i18n._("User"),field:"account_id",valueType:"user"},{label:this.app.i18n._("Login Time"),field:"li",valueType:"date",pastOnly:true},{label:this.app.i18n._("Logout Time"),field:"lo",valueType:"date",pastOnly:true},{label:this.app.i18n._("Client Type"),field:"clienttype"}],defaultFilter:"query",filters:[{field:"li",operator:"within",value:"weekThis"},{field:"clienttype",operator:"equals",value:"TineJson"}],plugins:[new Tine.widgets.grid.FilterToolbarQuickFilterPlugin()]})},getColumns:function(){return[{header:this.app.i18n._("Session ID"),id:"sessionid",dataIndex:"sessionid",width:200,hidden:true},{header:this.app.i18n._("Login Name"),id:"login_name",dataIndex:"login_name"},{header:this.app.i18n._("Name"),id:"account_id",dataIndex:"account_id",width:170,sortable:false,renderer:Tine.Tinebase.common.usernameRenderer},{header:this.app.i18n._("IP Address"),id:"ip",dataIndex:"ip",width:150},{header:this.app.i18n._("Login Time"),id:"li",dataIndex:"li",width:140,renderer:Tine.Tinebase.common.dateTimeRenderer},{header:this.app.i18n._("Logout Time"),id:"lo",dataIndex:"lo",width:140,renderer:Tine.Tinebase.common.dateTimeRenderer},{header:this.app.i18n._("Result"),id:"result",dataIndex:"result",width:110,renderer:this.resultRenderer,scope:this},{header:this.app.i18n._("Client Type"),id:"clienttype",dataIndex:"clienttype",width:50}]},resultRenderer:function(b,g,e,a,c,d){var f;switch(b){case"-102":f=this.app.i18n._("user blocked");break;case"-101":f=this.app.i18n._("password expired");break;case"-100":f=this.app.i18n._("user disabled");break;case"-3":f=this.app.i18n._("invalid password");break;case"-2":f=this.app.i18n._("ambiguous username");break;case"-1":f=this.app.i18n._("user not found");break;case"0":f=this.app.i18n._("failure");break;case"1":f=this.app.i18n._("success");break}return f}});Ext.ns("Tine.Admin.Model");Tine.Admin.Model.sambaMachineArray=[{name:"accountId"},{name:"accountLoginName"},{name:"accountLastName"},{name:"accountFullName"},{name:"accountDisplayName"},{name:"accountPrimaryGroup"},{name:"accountHomeDirectory"},{name:"accountLoginShell"},{name:"sid"},{name:"primaryGroupSID"},{name:"acctFlags"},{name:"pwdMustChange",type:"date",dateFormat:Date.patterns.ISO8601Long}];Tine.Admin.Model.SambaMachine=Tine.Tinebase.data.Record.create(Tine.Admin.Model.sambaMachineArray,{appName:"Admin",modelName:"SambaMachine",idProperty:"accountId",titleProperty:"accountDisplayName",recordName:"Computer",recordsName:"Computers"});Tine.Admin.sambaMachineBackend=new Tine.Tinebase.data.RecordProxy({appName:"Admin",modelName:"SambaMachine",recordClass:Tine.Admin.Model.SambaMachine,idProperty:"accountId"});Ext.ns("Tine.Admin.sambaMachine");Tine.Admin.sambaMachine.show=function(){var a=Tine.Tinebase.appMgr.get("Admin");if(!Tine.Admin.sambaMachine.gridPanel){Tine.Admin.sambaMachine.gridPanel=new Tine.Admin.SambaMachineGridPanel({app:a})}else{setTimeout("Ext.getCmp('gridAdminComputers').getStore().load({ params: { start:0, limit:50 } })",100)}Tine.Tinebase.MainScreen.setActiveContentPanel(Tine.Admin.sambaMachine.gridPanel,true);Tine.Tinebase.MainScreen.setActiveToolbar(Tine.Admin.sambaMachine.gridPanel.actionToolbar,true)};Tine.Admin.SambaMachineGridPanel=Ext.extend(Tine.widgets.grid.GridPanel,{recordClass:Tine.Admin.Model.SambaMachine,recordProxy:Tine.Admin.sambaMachineBackend,defaultSortInfo:{field:"accountLoginName",direction:"ASC"},evalGrants:false,gridConfig:{id:"gridAdminComputers",autoExpandColumn:"accountDisplayName"},initComponent:function(){this.gridConfig.columns=this.getColumns();this.initFilterToolbar();this.plugins=this.plugins||[];this.plugins.push(this.filterToolbar);Tine.Admin.SambaMachineGridPanel.superclass.initComponent.call(this)},initFilterToolbar:function(){this.filterToolbar=new Tine.widgets.grid.FilterToolbar({filterModels:[{label:this.app.i18n._("Computer Name"),field:"query",operators:["contains"]}],defaultFilter:"query",filters:[],plugins:[new Tine.widgets.grid.FilterToolbarQuickFilterPlugin()]})},getColumns:function(){return[{id:"accountId",header:this.app.i18n._("ID"),width:100,sortable:true,dataIndex:"accountId",hidden:true},{id:"accountLoginName",header:this.app.i18n._("Name"),width:350,sortable:true,dataIndex:"accountLoginName"},{id:"accountDisplayName",header:this.app.i18n._("Description"),width:350,sortable:true,dataIndex:"accountDisplayName"}]}});Ext.ns("Tine.Admin.sambaMachine");Tine.Admin.SambaMachineEditDialog=Ext.extend(Tine.widgets.dialog.EditDialog,{windowNamePrefix:"sambaMachineEditWindow_",appName:"Admin",recordClass:Tine.Admin.Model.SambaMachine,recordProxy:Tine.Admin.sambaMachineBackend,evalGrants:false,getFormItems:function(){return{xtype:"columnform",labelAlign:"top",border:false,formDefaults:{xtype:"textfield",anchor:"100%",labelSeparator:"",columnWidth:1},items:[[{fieldLabel:this.app.i18n._("Computer Name"),name:"accountLoginName"}]]}}});Tine.Admin.SambaMachineEditDialog.openWindow=function(a){var c=(a.record&&a.record.id)?a.record.id:0;var b=Tine.WindowFactory.getWindow({width:300,height:100,name:Tine.Admin.SambaMachineEditDialog.windowNamePrefix+c,contentPanelConstructor:"Tine.Admin.SambaMachineEditDialog",contentPanelConstructorConfig:a});return b};Ext.ns("Tine.Admin.Tags");Tine.Admin.Tags.Main={tagsToolbar:null,gridPanel:null,actions:{addTag:null,editTag:null,deleteTag:null},handlers:{addTag:function(a,b){Tine.Admin.Tags.EditDialog.openWindow({tag:null,listeners:{scope:this,update:function(c){this.reload()}}})},editTag:function(a,b){var c=Ext.getCmp("AdminTagsGrid").getSelectionModel().getSelections();Tine.Admin.Tags.EditDialog.openWindow({tag:c[0],listeners:{scope:this,update:function(d){this.reload()}}})},deleteTag:function(a,b){Ext.MessageBox.confirm(this.translation.gettext("Confirm"),this.translation.gettext("Do you really want to delete the selected tags?"),function(d){if(d==="yes"){var e=[],f=Ext.getCmp("AdminTagsGrid").getSelectionModel().getSelections();for(var c=0;c<f.length;++c){e.push(f[c].id)}e=e;Ext.Ajax.request({url:"index.php",params:{method:"Admin.deleteTags",tagIds:e},text:this.translation.gettext("Deleting tag(s)..."),success:function(g,h){Ext.getCmp("AdminTagsGrid").getStore().reload()}})}},this)}},initComponent:function(){this.translation=new Locale.Gettext();this.translation.textdomain("Admin");this.actions.addTag=new Ext.Action({text:this.translation.gettext("Add Tag"),handler:this.handlers.addTag,iconCls:"action_tag",scope:this,disabled:!(Tine.Tinebase.common.hasRight("manage","Admin","shared_tags"))});this.actions.editTag=new Ext.Action({text:this.translation.gettext("Edit Tag"),disabled:true,handler:this.handlers.editTag,iconCls:"action_edit",scope:this});this.actions.deleteTag=new Ext.Action({text:this.translation.gettext("Delete Tag"),disabled:true,handler:this.handlers.deleteTag,iconCls:"action_delete",scope:this})},displayTagsToolbar:function(){if(this.tagsToolbar){Tine.Tinebase.MainScreen.setActiveToolbar(this.tagsToolbar,true);return}var a=new Ext.ux.SearchField({id:"TagsQuickSearchField",width:240,emptyText:Tine.Tinebase.translation._hidden("enter searchfilter")});a.on("change",function(){Ext.getCmp("AdminTagsGrid").getStore().load({params:{start:0,limit:50}})},this);this.tagsToolbar=new Ext.Toolbar({id:"AdminTagsToolbar",split:false,items:[{xtype:"buttongroup",columns:5,items:[Ext.apply(new Ext.Button(this.actions.addTag),{scale:"medium",rowspan:2,iconAlign:"top"}),{xtype:"tbspacer",width:10},Ext.apply(new Ext.Button(this.actions.editTag),{scale:"medium",rowspan:2,iconAlign:"top"}),{xtype:"tbspacer",width:10},Ext.apply(new Ext.Button(this.actions.deleteTag),{scale:"medium",rowspan:2,iconAlign:"top"})]},"->",this.translation.gettext("Search:")," ",a]});Tine.Tinebase.MainScreen.setActiveToolbar(this.tagsToolbar,true)},displayTagsGrid:function(){if(this.gridPanel){Tine.Tinebase.MainScreen.setActiveContentPanel(this.gridPanel,true);return}var a=new Ext.data.JsonStore({baseParams:{method:"Admin.getTags"},root:"results",totalProperty:"totalcount",id:"id",fields:Tine.Tinebase.Model.Tag,remoteSort:true});a.setDefaultSort("name","asc");a.on("beforeload",function(f,e){e=e||{};e.params=e.params||{};e.params.query=Ext.getCmp("TagsQuickSearchField").getValue()},this);var d=new Ext.PagingToolbar({pageSize:50,store:a,displayInfo:true,displayMsg:this.translation.gettext("Displaying tags {0} - {1} of {2}"),emptyMsg:this.translation.gettext("No tags to display")});var c=new Ext.grid.ColumnModel({defaults:{sortable:true,resizable:true},columns:[{id:"color",header:this.translation.gettext("Color"),dataIndex:"color",width:25,renderer:function(f,g,e){return'<div style="margin-top:1px;width: 8px; height: 8px; background-color:'+f+'; border-radius:5px;border: 1px solid black;" title="'+e.get("name")+" ("+_("Usage:&#160;")+e.get("occurrence")+')">&#160;</div>'}},{id:"name",header:this.translation.gettext("Name"),dataIndex:"name",width:200},{id:"description",header:this.translation.gettext("Description"),dataIndex:"description",width:500}]});var b=new Ext.grid.RowSelectionModel({multiSelect:true});b.on("selectionchange",function(e){var f=e.getCount();if(Tine.Tinebase.common.hasRight("manage","Admin","shared_tags")){if(f<1){this.actions.deleteTag.setDisabled(true);this.actions.editTag.setDisabled(true)}else{if(f>1){this.actions.deleteTag.setDisabled(false);this.actions.editTag.setDisabled(true)}else{this.actions.deleteTag.setDisabled(false);this.actions.editTag.setDisabled(false)}}}},this);this.gridPanel=new Ext.grid.GridPanel({id:"AdminTagsGrid",store:a,cm:c,tbar:d,autoSizeColumns:false,selModel:b,enableColLock:false,autoExpandColumn:"description",border:false,view:new Ext.grid.GridView({autoFill:true,forceFit:true,ignoreAdd:true,emptyText:this.translation.gettext("No tags to display")})});this.gridPanel.on("rowcontextmenu",function(f,g,e){e.stopEvent();if(!f.getSelectionModel().isSelected(g)){f.getSelectionModel().selectRow(g)}if(!this.contextMenu){this.contextMenu=new Ext.menu.Menu({id:"ctxMenuTags",items:[this.actions.editTag,this.actions.deleteTag,"-",this.actions.addTag]})}this.contextMenu.showAt(e.getXY())},this);this.gridPanel.on("rowdblclick",function(f,h,g){var e=f.getStore().getAt(h);Tine.Admin.Tags.EditDialog.openWindow({tag:e,listeners:{scope:this,update:function(i){this.reload()}}})},this);Tine.Tinebase.MainScreen.setActiveContentPanel(this.gridPanel,true)},loadData:function(){var a=Ext.getCmp("AdminTagsGrid").getStore();a.load({params:{start:0,limit:50}})},show:function(){if(this.tagsToolbar===null||this.gridPanel){this.initComponent()}this.displayTagsToolbar();this.displayTagsGrid();this.loadData()},reload:function(){if(Ext.ComponentMgr.all.containsKey("AdminTagsGrid")){setTimeout("Ext.getCmp('AdminTagsGrid').getStore().reload()",200)}}};Ext.ns("Tine.Admin.Tags");Tine.Admin.Tags.EditDialog=Ext.extend(Tine.widgets.dialog.EditRecord,{tag:null,windowNamePrefix:"AdminTagEditDialog_",id:"tagDialog",layout:"fit",border:false,labelWidth:120,labelAlign:"top",handlerApplyChanges:function(c,f,e){var d=this.getForm();if(d.isValid()){Ext.MessageBox.wait(this.translation.gettext("Please wait"),this.translation.gettext("Updating Tag"));var a=this.tag;a.data.rights=[];this.rightsStore.each(function(h){a.data.rights.push(h.data)});a.data.contexts=[];var g=true;var b=Ext.getCmp("adminSharedTagsContextPanel");b.getRootNode().eachChild(function(h){if(h.attributes.checked){a.data.contexts.push(h.id)}else{g=false}});if(g){a.data.contexts=["any"]}d.updateRecord(a);Ext.Ajax.request({params:{method:"Admin.saveTag",tagData:a.data},success:function(h){this.fireEvent("update",Ext.util.JSON.encode(this.tag.data));Ext.MessageBox.hide();if(e===true){this.window.close()}else{this.onRecordLoad(h)}},failure:function(h,i){Ext.MessageBox.alert(this.translation.gettext("Failed"),this.translation.gettext("Could not save tag."))},scope:this})}else{Ext.MessageBox.alert(this.translation.gettext("Errors"),this.translation.gettext("Please fix the errors noted."))}},updateRecord:function(a){if(a.length===0){a={}}this.tag=new Tine.Tinebase.Model.Tag(a,a.id?a.id:0);if(!a.rights){a.rights=[{tag_id:"",account_name:"Anyone",account_id:0,account_type:"anyone",view_right:true,use_right:true}]}this.rightsStore.loadData({results:a.rights,totalcount:a.rights.length});this.anyContext=!a.contexts||a.contexts.indexOf("any")>-1;this.createTreeNodes(a.appList);this.getForm().loadRecord(this.tag)},updateToolbarButtons:function(a){},createTreeNodes:function(d){var e=[];this.rootNode.eachChild(function(h){e.push(h)});for(var c=0,a=d.length;c<a;c+=1){e[c]?e[c].remove():null;var b=d[c];if(b.name==="Tinebase"){continue}var g=Tine.Tinebase.appMgr.get(b.name),f=(g)?g.getTitle():b.name;this.rootNode.appendChild(new Ext.tree.TreeNode({text:f,id:b.id,checked:this.anyContext||this.tag.get("contexts").indexOf(b.id)>-1,leaf:true,iconCls:"x-tree-node-leaf-checkbox"}))}},getFormContents:function(){this.rootNode=new Ext.tree.TreeNode({text:this.translation.gettext("Allowed Contexts"),expanded:true,draggable:false,allowDrop:false});var a=new Ext.tree.TreePanel({title:this.translation.gettext("Context"),id:"adminSharedTagsContextPanel",rootVisible:true,border:false,root:this.rootNode});var c=new Ext.tree.TreeSorter(a,{folderSort:true,dir:"asc"});this.rightsPanel=new Tine.widgets.account.PickerGridPanel({title:this.translation.gettext("Account Rights"),store:this.rightsStore,recordClass:Tine.Admin.Model.TagRight,hasAccountPrefix:true,selectType:"both",selectTypeDefault:"group",showHidden:true,configColumns:[new Ext.ux.grid.CheckColumn({header:this.translation.gettext("View"),dataIndex:"view_right",width:55}),new Ext.ux.grid.CheckColumn({header:this.translation.gettext("Use"),dataIndex:"use_right",width:55})]});var b={layout:"border",border:false,items:[{region:"north",xtype:"columnform",border:false,autoHeight:true,items:[[{columnWidth:0.3,fieldLabel:this.translation.gettext("Tag Name"),name:"name",allowBlank:false,maxLength:40},{columnWidth:0.6,name:"description",fieldLabel:this.translation.gettext("Description"),anchor:"100%",maxLength:256},{xtype:"colorfield",columnWidth:0.1,fieldLabel:this.translation.gettext("Color"),name:"color"}]]},{region:"center",xtype:"tabpanel",activeTab:0,deferredRender:false,defaults:{autoScroll:true},border:true,plain:true,items:[this.rightsPanel,a]}]};return b},initComponent:function(){this.tag=this.tag?this.tag:new Tine.Tinebase.Model.Tag({},0);this.translation=new Locale.Gettext();this.translation.textdomain("Admin");Ext.Ajax.request({scope:this,success:this.onRecordLoad,params:{method:"Admin.getTag",tagId:this.tag.id}});this.rightsStore=new Ext.data.JsonStore({root:"results",totalProperty:"totalcount",id:"account_id",fields:Tine.Admin.Model.TagRight});this.items=this.getFormContents();Tine.Admin.Tags.EditDialog.superclass.initComponent.call(this)},onRender:function(b,a){Tine.widgets.dialog.EditDialog.superclass.onRender.call(this,b,a);var c=new Ext.KeyMap(this.el,[{key:[10,13],ctrl:true,fn:this.handlerApplyChanges.createDelegate(this,[true],true),scope:this}]);this.loadMask=new Ext.LoadMask(b,{msg:String.format(_("Transferring {0}..."),this.translation.gettext("Tag"))});this.loadMask.show()},onRecordLoad:function(b){this.getForm().findField("name").focus(false,250);var a=Ext.util.JSON.decode(b.responseText);this.updateRecord(a);if(!this.tag.id){this.window.setTitle(this.translation.gettext("Add New Tag"))}else{this.window.setTitle(String.format(this.translation._('Edit Tag "{0}"'),this.tag.get("name")))}this.loadMask.hide()}});Tine.Admin.Tags.EditDialog.openWindow=function(a){a.tag=a.tag?a.tag:new Tine.Tinebase.Model.Tag({},0);var b=Tine.WindowFactory.getWindow({width:650,height:400,name:Tine.Admin.Tags.EditDialog.prototype.windowNamePrefix+a.tag.id,contentPanelConstructor:"Tine.Admin.Tags.EditDialog",contentPanelConstructorConfig:a});return b};Ext.ns("Tine.Admin.Roles");Tine.Admin.Roles.Main={rolesToolbar:null,gridPanel:null,actions:{addRole:null,editRole:null,deleteRole:null},handlers:{addRole:function(b,a){this.openEditWindow(null)},editRole:function(c,a){var b=Ext.getCmp("AdminRolesGrid").getSelectionModel().getSelections();this.openEditWindow(b[0])},deleteRole:function(b,a){Ext.MessageBox.confirm(this.translation.gettext("Confirm"),this.translation.gettext("Do you really want to delete the selected roles?"),function(e){if(e=="yes"){var f=new Array();var d=Ext.getCmp("AdminRolesGrid").getSelectionModel().getSelections();for(var c=0;c<d.length;++c){f.push(d[c].id)}f=f;Ext.Ajax.request({url:"index.php",params:{method:"Admin.deleteRoles",roleIds:f},text:this.translation.gettext("Deleting role(s)..."),success:function(h,g){Ext.getCmp("AdminRolesGrid").getStore().reload()},failure:function(g,h){Ext.MessageBox.alert(this.translation.gettext("Failed"),this.translation.gettext("Some error occurred while trying to delete the role."))}})}},this)}},openEditWindow:function(a){var b=Tine.Admin.Roles.EditDialog.openWindow({role:a,listeners:{scope:this,update:function(c){this.reload()}}})},initComponent:function(){this.translation=new Locale.Gettext();this.translation.textdomain("Admin");this.actions.addRole=new Ext.Action({text:this.translation.gettext("Add Role"),disabled:true,handler:this.handlers.addRole,iconCls:"action_permissions",scope:this});this.actions.editRole=new Ext.Action({text:this.translation.gettext("Edit Role"),disabled:true,handler:this.handlers.editRole,iconCls:"action_edit",scope:this});this.actions.deleteRole=new Ext.Action({text:this.translation.gettext("Delete Role"),disabled:true,handler:this.handlers.deleteRole,iconCls:"action_delete",scope:this})},displayRolesToolbar:function(){if(this.rolesToolbar){Tine.Tinebase.MainScreen.setActiveToolbar(this.rolesToolbar,true);return}var a=new Ext.ux.SearchField({id:"RolesQuickSearchField",width:240,emptyText:Tine.Tinebase.translation._hidden("enter searchfilter")});a.on("change",function(){Ext.getCmp("AdminRolesGrid").getStore().load({params:{start:0,limit:50}})},this);this.rolesToolbar=new Ext.Toolbar({id:"AdminRolesToolbar",split:false,items:[{xtype:"buttongroup",columns:5,items:[Ext.apply(new Ext.Button(this.actions.addRole),{scale:"medium",rowspan:2,iconAlign:"top"}),{xtype:"tbspacer",width:10},Ext.apply(new Ext.Button(this.actions.editRole),{scale:"medium",rowspan:2,iconAlign:"top"}),{xtype:"tbspacer",width:10},Ext.apply(new Ext.Button(this.actions.deleteRole),{scale:"medium",rowspan:2,iconAlign:"top"}),{xtype:"tbspacer",width:10}]},"->",this.translation.gettext("Search:")," ",a]});Tine.Tinebase.MainScreen.setActiveToolbar(this.rolesToolbar,true)},displayRolesGrid:function(){if(this.gridPanel){Tine.Tinebase.MainScreen.setActiveContentPanel(this.gridPanel,true);return}if(Tine.Tinebase.common.hasRight("manage","Admin","roles")){this.actions.addRole.setDisabled(false)}var a=new Ext.data.DirectStore({api:{read:Tine.Admin.getRoles},reader:new Ext.data.JsonReader({root:"results",idProperty:"id",totalProperty:"totalcount"},Tine.Tinebase.Model.Role),remoteSort:true});a.setDefaultSort("id","asc");a.on("beforeload",function(f,e){e=e||{};e.params=e.params||{};e.params.query=Ext.getCmp("RolesQuickSearchField").getValue()},this);var d=new Ext.PagingToolbar({pageSize:25,store:a,displayInfo:true,displayMsg:this.translation.gettext("Displaying roles {0} - {1} of {2}"),emptyMsg:this.translation.gettext("No roles to display")});var c=new Ext.grid.ColumnModel({defaults:{sortable:true,resizable:true},columns:[{id:"id",header:this.translation.gettext("ID"),dataIndex:"id",hidden:true,width:10},{id:"name",header:this.translation.gettext("Name"),dataIndex:"name",width:50},{id:"description",header:this.translation.gettext("Description"),dataIndex:"description"}]});var b=new Ext.grid.RowSelectionModel({multiSelect:true});b.on("selectionchange",function(f){var e=f.getCount();if(Tine.Tinebase.common.hasRight("manage","Admin","roles")){if(e<1){this.actions.deleteRole.setDisabled(true);this.actions.editRole.setDisabled(true)}else{if(e>1){this.actions.deleteRole.setDisabled(false);this.actions.editRole.setDisabled(true)}else{this.actions.deleteRole.setDisabled(false);this.actions.editRole.setDisabled(false)}}}},this);this.gridPanel=new Ext.grid.GridPanel({id:"AdminRolesGrid",store:a,cm:c,tbar:d,autoSizeColumns:false,selModel:b,enableColLock:false,autoExpandColumn:"n_family",border:false,view:new Ext.grid.GridView({autoFill:true,forceFit:true,ignoreAdd:true,emptyText:this.translation.gettext("No roles to display")})});this.gridPanel.on("rowcontextmenu",function(f,e,g){g.stopEvent();if(!f.getSelectionModel().isSelected(e)){f.getSelectionModel().selectRow(e)}if(!this.contextMenu){this.contextMenu=new Ext.menu.Menu({id:"ctxMenuRoles",items:[this.actions.editRole,this.actions.deleteRole,"-",this.actions.addRole]})}this.contextMenu.showAt(g.getXY())},this);this.gridPanel.on("rowdblclick",function(f,g,h){if(Tine.Tinebase.common.hasRight("manage","Admin","roles")){var e=f.getStore().getAt(g);this.openEditWindow(e)}},this);Tine.Tinebase.MainScreen.setActiveContentPanel(this.gridPanel,true)},loadData:function(){var a=Ext.getCmp("AdminRolesGrid").getStore();a.load({params:{start:0,limit:50}})},show:function(){if(this.rolesToolbar===null||this.gridPanel===null){this.initComponent()}this.displayRolesToolbar();this.displayRolesGrid();this.loadData()},reload:function(){if(Ext.ComponentMgr.all.containsKey("AdminRolesGrid")){setTimeout("Ext.getCmp('AdminRolesGrid').getStore().reload()",200)}}};Tine.Admin.Roles.Right=Ext.data.Record.create([{name:"application_id"},{name:"right"}]);Ext.ns("Tine.Admin.Roles");Tine.Admin.Roles.EditDialog=Ext.extend(Tine.widgets.dialog.EditRecord,{role:null,allRights:null,rightsTreePanel:null,windowNamePrefix:"rolesEditWindow_",layout:"fit",border:false,id:"roleDialog",labelWidth:120,labelAlign:"top",getRightId:function(d,b){var c=false,a=null;this.rightsDataStore.each(function(e){if(e.data.application_id===d&&e.data.right===b){a=e.id;return}});return a},handlerApplyChanges:function(c,g,f){var e=this.getForm();if(e.isValid()){var a=Ext.getCmp("roleMembersGrid");Ext.MessageBox.wait(this.translation.gettext("Please wait"),this.translation.gettext("Updating Memberships"));var d=[];this.membersStore.each(function(i){d.push(i.data)});var b=[],h=this.rightsDataStore;h.each(function(i){b.push(i.data)});e.updateRecord(this.role);Ext.Ajax.request({params:{method:"Admin.saveRole",roleData:this.role.data,roleMembers:d,roleRights:b},timeout:300000,success:function(i){this.fireEvent("update",Ext.util.JSON.encode(this.role.data));Ext.MessageBox.hide();if(f===true){this.window.close()}else{this.onRecordLoad(i)}},failure:function(i,j){Ext.MessageBox.alert(this.translation.gettext("Failed"),this.translation.gettext("Could not save role."))},scope:this})}else{Ext.MessageBox.alert(this.translation.gettext("Errors"),this.translation.gettext("Please fix the errors noted."))}},handlerDelete:function(a,b){var c=[this.role.id];Ext.Ajax.request({url:"index.php",params:{method:"Admin.deleteRoles",roleIds:c},text:this.translation.gettext("Deleting role..."),success:function(d,e){if(window.opener.Tine.Admin.Roles){window.opener.Tine.Admin.Roles.Main.reload()}window.close()},failure:function(d,e){Ext.MessageBox.alert(this.translation.gettext("Failed"),this.translation.gettext("Some error occurred while trying to delete the role."))}})},updateRecord:function(a){if(a.length===0){a={}}this.role=new Tine.Tinebase.Model.Role(a,a.id?a.id:0);this.membersStore.loadData(this.role.get("roleMembers"));this.rightsDataStore.loadData(this.role.get("roleRights"));this.allRights=this.role.get("allRights");this.createRightsTreeNodes()},initRightsTree:function(){this.rightsTreePanel=new Ext.tree.TreePanel({title:this.translation.gettext("Rights"),autoScroll:true,rootVisible:false,border:false});this.treeSorter=new Ext.tree.TreeSorter(this.rightsTreePanel,{folderSort:true,dir:"asc"});var a=new Ext.tree.TreeNode({text:"root",draggable:false,allowDrop:false,id:"root"});this.rightsTreePanel.setRootNode(a)},createRightsTreeNodes:function(){var e=this.rightsTreePanel.getRootNode();var a=[];e.eachChild(function(i){a.push(i)});var k=(this.allRights.length>5)?false:true;for(var g=0;g<this.allRights.length;g+=1){var h=a[g]?a[g].remove():null;this.allRights[g].text=this.translateAppTitle(this.allRights[g].text);var d=new Ext.tree.TreeNode(this.allRights[g]);d.attributes.application_id=this.allRights[g].application_id;d.expanded=k;e.appendChild(d);if(this.allRights[g].children){for(var f=0;f<this.allRights[g].children.length;f+=1){var c=this.allRights[g].children[f];c.leaf=true;c.checked=!!this.getRightId(this.allRights[g].application_id,c.right);c.iconCls="x-tree-node-leaf-checkbox";var b=new Ext.tree.TreeNode(c);b.attributes.right=c.right;b.on("checkchange",function(j,i){var m=j.parentNode.attributes.application_id;if(i){this.rightsDataStore.add(new Ext.data.Record({right:j.attributes.right,application_id:m}))}else{var l=this.getRightId(m,j.attributes.right);this.rightsDataStore.remove(this.rightsDataStore.getById(l))}},this);d.appendChild(b)}}}return this.rightsTreePanel},translateAppTitle:function(a){var b=Tine.Tinebase.appMgr.get(a);return(b)?b.getTitle():a},getFormContents:function(){this.accountPickerGridPanel=new Tine.widgets.account.PickerGridPanel({title:this.translation.gettext("Members"),store:this.membersStore,anchor:"100% 100%",groupRecordClass:Tine.Admin.Model.Group,selectType:"both",selectAnyone:false,selectTypeDefault:"group",showHidden:true});this.initRightsTree();var a={layout:"border",border:false,items:[{region:"north",layout:"form",border:false,autoHeight:true,items:[{xtype:"textfield",fieldLabel:this.translation.gettext("Role Name"),name:"name",anchor:"100%",allowBlank:false,maxLength:128},{xtype:"textarea",name:"description",fieldLabel:this.translation.gettext("Description"),grow:false,preventScrollbars:false,anchor:"100%",height:60}]},{xtype:"tabpanel",plain:true,region:"center",activeTab:0,items:[this.accountPickerGridPanel,this.rightsTreePanel]}]};return a},initComponent:function(){this.role=this.role?this.role:new Tine.Tinebase.Model.Role({},0);this.translation=new Locale.Gettext();this.translation.textdomain("Admin");Ext.Ajax.request({scope:this,success:this.onRecordLoad,params:{method:"Admin.getRole",roleId:this.role.id}});this.membersStore=new Ext.data.JsonStore({root:"results",totalProperty:"totalcount",id:"id",fields:Tine.Tinebase.Model.Account});this.rightsDataStore=new Ext.data.JsonStore({root:"results",totalProperty:"totalcount",fields:Tine.Admin.Roles.Right});this.items=this.getFormContents();Tine.Admin.Groups.EditDialog.superclass.initComponent.call(this)},onRender:function(b,a){Tine.widgets.dialog.EditDialog.superclass.onRender.call(this,b,a);var c=new Ext.KeyMap(this.el,[{key:[10,13],ctrl:true,fn:this.handlerApplyChanges.createDelegate(this,[true],true),scope:this}]);this.loadMask=new Ext.LoadMask(b,{msg:String.format(_("Transferring {0}..."),this.translation.gettext("Role"))});this.loadMask.show()},onRecordLoad:function(b){this.getForm().findField("name").focus(false,250);var a=Ext.util.JSON.decode(b.responseText);this.updateRecord(a);if(!this.role.id){this.window.setTitle(this.translation.gettext("Add New Role"))}else{this.window.setTitle(String.format(this.translation.gettext('Edit Role "{0}"'),this.role.get("name")))}this.getForm().loadRecord(this.role);this.loadMask.hide()}});Tine.Admin.Roles.EditDialog.openWindow=function(a){a.role=a.role?a.role:new Tine.Tinebase.Model.Role({},0);var b=Tine.WindowFactory.getWindow({width:400,height:600,name:Tine.Admin.Roles.EditDialog.prototype.windowNamePrefix+a.role.id,contentPanelConstructor:"Tine.Admin.Roles.EditDialog",contentPanelConstructorConfig:a});return b};Ext.ns("Tine.Admin");Tine.Admin.ApplicationFilter=Ext.extend(Tine.widgets.grid.FilterModel,{app:null,field:"application_id",defaultOperator:"equals",initComponent:function(){Tine.Admin.ApplicationFilter.superclass.initComponent.call(this);this.operators=["equals","not"];this.label=this.app.i18n._("Application")},valueRenderer:function(b,a){this.appStore=new Ext.data.JsonStore({root:"results",totalProperty:"totalcount",fields:Tine.Admin.Model.Application});this.appStore.loadData({results:Tine.Tinebase.registry.get("userApplications"),totalcount:Tine.Tinebase.registry.get("userApplications").length});var c=new Ext.form.ComboBox({app:this.app,name:"application_id",store:this.appStore,displayField:"name",valueField:"id",filter:b,width:200,id:"tw-ftb-frow-valuefield-"+b.id,value:b.data.value?b.data.value:this.defaultValue,mode:"local",renderTo:a});c.on("specialkey",function(f,d){if(d.getKey()==d.ENTER){this.onFiltertrigger()}},this);return c}});Tine.widgets.grid.FilterToolbar.FILTERS["admin.application"]=Tine.Admin.ApplicationFilter;Ext.ns("Tine.Admin.container");Tine.Admin.container.show=function(){var a=Tine.Tinebase.appMgr.get("Admin");if(!Tine.Admin.container.gridPanel){Tine.Admin.container.gridPanel=new Tine.Admin.container.GridPanel({app:a})}else{Tine.Admin.container.gridPanel.loadGridData.defer(100,Tine.Admin.container.gridPanel,[])}Tine.Tinebase.MainScreen.setActiveContentPanel(Tine.Admin.container.gridPanel,true);Tine.Tinebase.MainScreen.setActiveToolbar(Tine.Admin.container.gridPanel.actionToolbar,true)};Ext.ns("Tine.Admin.Model");Tine.Admin.Model.Container=Tine.Tinebase.data.Record.create(Tine.Tinebase.Model.Container.getFieldDefinitions().concat([{name:"note"}]),{appName:"Admin",modelName:"Container",idProperty:"id",titleProperty:"name",recordName:"Container",recordsName:"Containers"});Tine.Admin.Model.Container.getDefaultData=function(){return{type:"shared",backend:"Sql"}};Tine.Admin.containerBackend=new Tine.Tinebase.data.RecordProxy({appName:"Admin",modelName:"Container",recordClass:Tine.Admin.Model.Container,idProperty:"id"});Ext.ns("Tine.Admin.container");Tine.Admin.ContainerEditDialog=Ext.extend(Tine.widgets.dialog.EditDialog,{windowNamePrefix:"containerEditWindow_",appName:"Admin",recordClass:Tine.Admin.Model.Container,recordProxy:Tine.Admin.containerBackend,evalGrants:false,onRecordLoad:function(){Tine.Admin.ContainerEditDialog.superclass.onRecordLoad.apply(this,arguments);if(this.record&&this.record.id){this.grantsStore.loadData({results:this.record.get("account_grants"),totalcount:this.record.get("account_grants").length})}},onRecordUpdate:function(){Tine.Admin.ContainerEditDialog.superclass.onRecordUpdate.apply(this,arguments);this.record.set("account_grants","");var a=[];this.grantsStore.each(function(b){a.push(b.data)});this.record.set("account_grants",a)},initGrantsGrid:function(){this.grantsStore=new Ext.data.JsonStore({root:"results",totalProperty:"totalcount",id:"account_id",fields:Tine.Tinebase.Model.Grant});this.grantsGrid=new Tine.widgets.container.GrantsGrid({flex:1,store:this.grantsStore,grantContainer:this.record.data,alwaysShowAdminGrant:true,showHidden:true});return this.grantsGrid},getFormItems:function(){var a=Tine.Tinebase.registry.get("userApplications");this.appStore=new Ext.data.JsonStore({root:"results",totalProperty:"totalcount",fields:Tine.Admin.Model.Application});this.appStore.loadData({results:a,totalcount:a.length});return{layout:"vbox",layoutConfig:{align:"stretch",pack:"start"},border:false,items:[{xtype:"columnform",border:false,autoHeight:true,items:[[{columnWidth:0.225,fieldLabel:this.app.i18n._("Name"),name:"name",allowBlank:false,maxLength:40},{xtype:"combo",readOnly:this.record.id!=0,store:this.appStore,columnWidth:0.225,name:"application_id",displayField:"name",valueField:"id",fieldLabel:this.app.i18n._("Application"),mode:"local",anchor:"100%",allowBlank:false,forceSelection:true},{readOnly:1,columnWidth:0.225,name:"model",fieldLabel:this.app.i18n._("Model"),anchor:"100%",allowBlank:true},{xtype:"combo",columnWidth:0.225,name:"type",fieldLabel:this.app.i18n._("Type"),store:[["personal",this.app.i18n._("personal")],["shared",this.app.i18n._("shared")]],listeners:{scope:this,select:function(c,b){this.getForm().findField("note").setDisabled(b.data.field1==="shared")}},mode:"local",anchor:"100%",allowBlank:false,forceSelection:true},{xtype:"colorfield",columnWidth:0.1,fieldLabel:this.app.i18n._("Color"),name:"color"}]]},this.initGrantsGrid(),{emptyText:this.app.i18n._("Note for Owner"),disabled:this.record.get("type")=="shared",xtype:"textarea",border:false,autoHeight:true,name:"note"}]}}});Tine.Admin.ContainerEditDialog.openWindow=function(a){var b=Tine.WindowFactory.getWindow({width:600,height:400,name:Tine.Admin.ContainerEditDialog.prototype.windowNamePrefix+Ext.id(),contentPanelConstructor:"Tine.Admin.ContainerEditDialog",contentPanelConstructorConfig:a});return b};Ext.ns("Tine.Admin.container");Tine.Admin.container.GridPanel=Ext.extend(Tine.widgets.grid.GridPanel,{newRecordIcon:"admin-action-add-container",recordClass:Tine.Admin.Model.Container,recordProxy:Tine.Admin.containerBackend,defaultSortInfo:{field:"name",direction:"ASC"},evalGrants:false,gridConfig:{autoExpandColumn:"name"},initComponent:function(){this.gridConfig.cm=this.getColumnModel();this.initFilterToolbar();this.plugins=this.plugins||[];this.plugins.push(this.filterToolbar);Tine.Admin.container.GridPanel.superclass.initComponent.call(this)},getColumnModel:function(){return new Ext.grid.ColumnModel({defaults:{sortable:true,hidden:true,resizable:true},columns:this.getColumns()})},getColumns:function(){return[{header:this.app.i18n._("ID"),id:"id",dataIndex:"id",width:50},{header:this.app.i18n._("Container Name"),id:"name",dataIndex:"name",hidden:false,width:200},{header:this.app.i18n._("Application"),id:"application_id",dataIndex:"application_id",hidden:false,width:100,renderer:this.appRenderer,scope:this},{header:this.app.i18n._("Type"),id:"type",dataIndex:"type",hidden:false,width:80,renderer:this.typeRenderer,scope:this}]},appRenderer:function(a){return this.app.i18n._(a.name)},typeRenderer:function(a){return this.app.i18n._(a)},initFilterToolbar:function(){this.filterToolbar=new Tine.widgets.grid.FilterToolbar({filterModels:[{label:this.app.i18n._("Container"),field:"query",operators:["contains"]},{label:this.app.i18n._("Type"),field:"type",operators:["contains"]},{filtertype:"admin.application",app:this.app}],defaultFilter:"query",filters:[{field:"type",operator:"equals",value:"shared"}],plugins:[new Tine.widgets.grid.FilterToolbarQuickFilterPlugin()]})}});Ext.ns("Tine.Admin.customfield");Tine.Admin.customfield.show=function(){var a=Tine.Tinebase.appMgr.get("Admin");if(!Tine.Admin.customfield.gridPanel){Tine.Admin.customfield.gridPanel=new Tine.Admin.customfield.GridPanel({app:a})}else{Tine.Admin.customfield.gridPanel.loadGridData.defer(100,Tine.Admin.customfield.gridPanel,[])}Tine.Tinebase.MainScreen.setActiveContentPanel(Tine.Admin.customfield.gridPanel,true);Tine.Tinebase.MainScreen.setActiveToolbar(Tine.Admin.customfield.gridPanel.actionToolbar,true)};Ext.ns("Tine.Admin.Model");Tine.Admin.Model.Customfield=Tine.Tinebase.data.Record.create(Tine.Tinebase.Model.Customfield.prototype.fields.items,{appName:"Admin",modelName:"Customfield",idProperty:"id",titleProperty:"name",recordName:"Customfield",recordsName:"Customfields"});Tine.Admin.customfieldBackend=new Tine.Tinebase.data.RecordProxy({appName:"Admin",modelName:"Customfield",recordClass:Tine.Admin.Model.Customfield,idProperty:"id"});Ext.ns("Tine.Admin.customfield");Tine.Admin.CustomfieldEditDialog=Ext.extend(Tine.widgets.dialog.EditDialog,{windowNamePrefix:"customfieldEditWindow_",appName:"Admin",recordClass:Tine.Admin.Model.Customfield,recordProxy:Tine.Admin.customfieldBackend,evalGrants:false,definitionFields:["label","type","value_search","length","required"],uiconfigFields:["order","group"],fieldsWithStore:["record","keyField"],fieldType:null,onRecordLoad:function(){Tine.Admin.CustomfieldEditDialog.superclass.onRecordLoad.apply(this,arguments);if(this.rendered&&this.record.get("definition")){this.fieldType=this.record.get("definition").type;Ext.each(this.definitionFields,function(a){this.getForm().findField(a).setValue(this.record.get("definition")[a])},this);Ext.each(this.uiconfigFields,function(a){this.getForm().findField(a).setValue(this.record.get("definition").uiconfig[a])},this);if(this.record.get("definition")[this.fieldType+"Config"]){this[this.fieldType+"Config"]=this.record.get("definition")[this.fieldType+"Config"]}}},onRecordUpdate:function(){Tine.Admin.CustomfieldEditDialog.superclass.onRecordUpdate.apply(this,arguments);this.record.data.definition={uiconfig:{}};Ext.each(this.definitionFields,function(a){var b=this.getForm().findField(a);if(!b.disabled&&(a!=="value_search"||(a==="value_search"&&b.getValue()==1))){this.record.data.definition[a]=b.getValue()}},this);Ext.each(this.uiconfigFields,function(a){this.record.data.definition.uiconfig[a]=this.getForm().findField(a).getValue()},this);Ext.each(this.fieldsWithStore,function(a){if(this.fieldsWithStore.indexOf(this.fieldType)!==-1&&this[a+"Config"]){this.record.data.definition[a+"Config"]=this[a+"Config"]}},this)},onApplyChanges:function(){if(this.fieldsWithStore.indexOf(this.fieldType)!==-1&&!this[this.fieldType+"Config"]){Ext.Msg.alert(_("Errors"),this.app.i18n._("Please configure store for this field type"));return}Tine.Admin.CustomfieldEditDialog.superclass.onApplyChanges.apply(this,arguments)},onTypeComboSelect:function(c,a,b){this.fieldType=c.getValue();this.getForm().findField("length").setDisabled(this.fieldType!=="string");this.getForm().findField("value_search").setValue(this.fieldType==="searchcombo"?1:0);this.configureStoreBtn.setDisabled(this.fieldsWithStore.indexOf(this.fieldType)===-1)},onStoreWindowOK:function(){if(this[this.fieldType+"Store"].isValid()){this[this.fieldType+"Config"]={value:{records:this[this.fieldType+"Store"].getValue()}};if(this.fieldType==="keyField"){var a=this[this.fieldType+"Store"].store.findExact("default",true);if(a!==-1){this[this.fieldType+"Config"].value["default"]=this[this.fieldType+"Store"].store.getAt(a).get("id")}}this.onStoreWindowClose()}},onStoreWindowClose:function(){this.storeWindow.purgeListeners();this.storeWindow.close()},getApplicationModels:function(g,b){var a=[],e,f=Ext.isString(g)?g:g.get("name"),c=Tine.Tinebase.appMgr.get(f),i=c&&c.i18n?c.i18n:Tine.Tinebase.translation,h=Tine[f].Model;if(h){for(var d in h){if(h.hasOwnProperty(d)&&typeof h[d].getMeta==="function"){if(b&&h[d].getField("customfields")){e=h[d].getMeta("appName")+"_Model_"+h[d].getMeta("modelName");Tine.log.info("Found model with customfields property: "+e);a.push([e,i.n_(h[d].getMeta("recordName"),h[d].getMeta("recordsName"),1)])}else{if(!b){e="Tine."+h[d].getMeta("appName")+".Model."+h[d].getMeta("modelName");Tine.log.info("Found model: "+e);a.push([e,i.n_(h[d].getMeta("recordName"),h[d].getMeta("recordsName"),1)])}}}}}return a},initKeyFieldStore:function(){Tine.log.info("Initialize keyField store config");var a=this,e=Ext.data.Record.create([{name:"default"},{name:"id"},{name:"value"}]),c=new Ext.ux.grid.CheckColumn({id:"default",header:a.app.i18n._("Default"),dataIndex:"default",sortable:false,align:"center",width:55});this[this.fieldType+"Store"]=new Tine.widgets.grid.QuickaddGridPanel({autoExpandColumn:"value",quickaddMandatory:"id",resetAllOnNew:true,useBBar:true,border:false,recordClass:e,store:new Ext.data.Store({reader:new Ext.data.ArrayReader({idIndex:0},e),listeners:{scope:this,update:function(g,h,f){h.commit(true);if(h.get("default")){g.each(function(i){if(i.id!==h.id){i.set("default",false);i.commit(true)}},this)}}}}),plugins:[c],getColumnModel:function(){return new Ext.grid.ColumnModel([c,{id:"id",header:a.app.i18n._("ID"),dataIndex:"id",hideable:false,sortable:false,quickaddField:new Ext.form.TextField({emptyText:a.app.i18n._("Add a New ID...")})},{id:"value",header:a.app.i18n._("Value"),dataIndex:"value",hideable:false,sortable:false,quickaddField:new Ext.form.TextField({emptyText:a.app.i18n._("Add a New Value...")})}])},onNewentry:function(f){if(this.store.findExact("id",f.id)!==-1){Ext.Msg.alert(a.app.i18n._("Error"),a.app.i18n._("ID already exists"));return false}if(this.store.findExact("value",f.value)!==-1){Ext.Msg.alert(a.app.i18n._("Error"),a.app.i18n._("Value already exists"));return false}if(Ext.isEmpty(f.value)){f.value=f.id}Tine.widgets.grid.QuickaddGridPanel.prototype.onNewentry.apply(this,arguments)},setValue:function(f){this.setStoreFromArray(f)},getValue:function(){var f=[];this.store.each(function(g){f.push({id:g.get("id"),value:g.get("value")})});return f},isValid:function(){return true}});var d=!Ext.isEmpty(this.record.get("definition"))&&this.record.get("definition")[this.fieldType+"Config"]?this.record.get("definition")[this.fieldType+"Config"].value:null;if(this.record.id!=0&&d){this[this.fieldType+"Store"].setValue(d.records);if(d["default"]){var b=this[this.fieldType+"Store"].store.findExact("id",d["default"]);if(b!==-1){this[this.fieldType+"Store"].store.getAt(b).set("default",true)}}}return this[this.fieldType+"Store"]},initRecordStore:function(){Tine.log.info("Initialize record store config");var self=this;this[this.fieldType+"Store"]=new Ext.FormPanel({labelAlign:"top",frame:true,border:false,defaults:{anchor:"100%"},bodyStyle:"padding: 15px",items:[{xtype:"combo",store:this.appStore,name:"application_id",displayField:"name",valueField:"id",fieldLabel:this.app.i18n._("Application"),mode:"local",forceSelection:true,editable:false,listeners:{scope:this,select:function(combo,rec){this[this.fieldType+"Store"].items.get(1).store.loadData(this.getApplicationModels(rec,false))}}},{xtype:"combo",store:new Ext.data.ArrayStore({idIndex:0,fields:["recordClass","recordName"]}),name:"recordClass",displayField:"recordName",valueField:"recordClass",fieldLabel:this.app.i18n._("Record Class"),mode:"local",forceSelection:false,editable:true,allowBlank:false}],setValue:function(data){var parts=data.split("."),app=Tine.Tinebase.appMgr.get(parts[1]);this.items.get(0).setValue(app.id);this.items.get(1).store.loadData(self.getApplicationModels(app.appName,false));this.items.get(1).setValue(data)},getValue:function(){return this.items.get(1).getValue()},isValid:function(){try{var model=eval(this.items.get(1).getValue())}catch(e){Ext.Msg.alert(_("Errors"),self.app.i18n._("Given record class not found"));return false}return true}});var configValue=!Ext.isEmpty(this.record.get("definition"))&&this.record.get("definition")[this.fieldType+"Config"]?this.record.get("definition")[this.fieldType+"Config"].value:null;if(this.record.id!=0&&configValue){this[this.fieldType+"Store"].setValue(configValue.records)}return this[this.fieldType+"Store"]},showStoreWindow:function(){this.storeWindow=Tine.WindowFactory.getWindow({modal:true,width:500,height:320,border:false,items:this["init"+(this.fieldType.charAt(0).toUpperCase()+this.fieldType.substr(1))+"Store"](),fbar:["->",{text:_("OK"),minWidth:70,scope:this,handler:this.onStoreWindowOK,iconCls:"action_applyChanges"},{text:_("Cancel"),minWidth:70,scope:this,handler:this.onStoreWindowClose,iconCls:"action_cancel"}]})},getFormItems:function(){this.appStore=new Ext.data.JsonStore({root:"results",totalProperty:"totalcount",fields:Tine.Admin.Model.Application});this.appStore.loadData({results:Tine.Tinebase.registry.get("userApplications"),totalcount:Tine.Tinebase.registry.get("userApplications").length});this.modelStore=new Ext.data.ArrayStore({idIndex:0,fields:[{name:"value"},{name:"name"}]});this.configureStoreBtn=new Ext.Button({columnWidth:0.333,fieldLabel:"&#160;",xtype:"button",iconCls:"admin-node-customfields-store",text:this.app.i18n._("Configure store"),disabled:this.record.id==0||this.fieldsWithStore.indexOf(this.record.get("definition").type)===-1,scope:this,handler:this.showStoreWindow});return{layout:"vbox",layoutConfig:{align:"stretch",pack:"start"},border:false,items:[{xtype:"columnform",border:false,autoHeight:true,items:[[{xtype:"combo",readOnly:this.record.id!=0,store:this.appStore,columnWidth:0.5,name:"application_id",displayField:"name",valueField:"id",fieldLabel:this.app.i18n._("Application"),mode:"local",anchor:"100%",allowBlank:false,forceSelection:true,editable:false,listeners:{scope:this,select:function(a,b){this.modelStore.loadData(this.getApplicationModels(b,true))}}},{xtype:"combo",readOnly:this.record.id!=0,store:this.modelStore,columnWidth:0.5,name:"model",displayField:"name",valueField:"value",fieldLabel:this.app.i18n._("Model"),mode:"local",anchor:"100%",allowBlank:false,forceSelection:true,editable:false}]]},{xtype:"fieldset",bodyStyle:"padding: 5px",margins:{top:5,right:0,bottom:0,left:0},title:this.app.i18n._("Custom field definition"),labelAlign:"top",defaults:{anchor:"100%"},items:[{xtype:"columnform",border:false,items:[[{columnWidth:0.666,xtype:"combo",readOnly:this.record.id!=0,store:[["string",this.app.i18n._("Text")],["integer",this.app.i18n._("Number")],["date",this.app.i18n._("Date")],["datetime",this.app.i18n._("DateTime")],["time",this.app.i18n._("Time")],["boolean",this.app.i18n._("Boolean")],["searchcombo",this.app.i18n._("Search Combo")],["keyField",this.app.i18n._("Key Field")],["record",this.app.i18n._("Record")]],name:"type",fieldLabel:this.app.i18n._("Type"),mode:"local",allowBlank:false,editable:false,forceSelection:true,listeners:{scope:this,select:this.onTypeComboSelect}},this.configureStoreBtn]]},{xtype:"textfield",fieldLabel:this.app.i18n._("Name"),name:"name",allowBlank:false,maxLength:50},{xtype:"textfield",fieldLabel:this.app.i18n._("Label"),name:"label",allowBlank:false,maxLength:50},{xtype:"numberfield",fieldLabel:this.app.i18n._("Length"),name:"length",disabled:this.record.id==0||this.record.get("definition").type!=="string"},{xtype:"checkbox",fieldLabel:this.app.i18n._("Required"),name:"required"}]},{xtype:"fieldset",bodyStyle:"padding: 5px",margins:{top:5,right:0,bottom:0,left:0},title:this.app.i18n._("Custom field additional properties"),labelAlign:"top",defaults:{anchor:"100%"},items:[{xtype:"textfield",fieldLabel:this.app.i18n._("Group"),name:"group",maxLength:50},{xtype:"numberfield",fieldLabel:this.app.i18n._("Order"),name:"order"}]},{xtype:"hidden",name:"value_search",value:0}]}},isValid:function(){var a=Tine.Admin.UserEditDialog.superclass.isValid.call(this);if(!this.record.id&&this.customFieldExists()){a=false;this.getForm().markInvalid([{id:"name",msg:this.app.i18n._("Customfield already exists. Please choose another name.")}])}return a},customFieldExists:function(){var c=this.getForm().findField("application_id"),b=c.getStore(),f=b.getById(c.getValue()),e=this.getForm().findField("name").getValue(),a=false;if(f&&e){var d=Tine[f.get("name")].registry.get("customfields");Ext.each(d,function(g){if(e===g.name){a=true}},this)}return a}});Tine.Admin.CustomfieldEditDialog.openWindow=function(a){var b=Tine.WindowFactory.getWindow({width:500,height:500,name:Tine.Admin.CustomfieldEditDialog.prototype.windowNamePrefix+Ext.id(),contentPanelConstructor:"Tine.Admin.CustomfieldEditDialog",contentPanelConstructorConfig:a});return b};Ext.ns("Tine.Admin.customfield");Tine.Admin.customfield.GridPanel=Ext.extend(Tine.widgets.grid.GridPanel,{newRecordIcon:"admin-action-add-customfield",recordClass:Tine.Admin.Model.Customfield,recordProxy:Tine.Admin.customfieldBackend,defaultSortInfo:{field:"name",direction:"ASC"},evalGrants:false,gridConfig:{autoExpandColumn:"name"},initComponent:function(){this.gridConfig.cm=this.getColumnModel();this.initFilterToolbar();this.plugins=this.plugins||[];this.plugins.push(this.filterToolbar);Tine.Admin.customfield.GridPanel.superclass.initComponent.call(this)},getColumnModel:function(){return new Ext.grid.ColumnModel({defaults:{sortable:true,hidden:true,resizable:true},columns:this.getColumns()})},getColumns:function(){return[{header:this.app.i18n._("ID"),id:"id",dataIndex:"id",width:50},{header:this.app.i18n._("Label"),id:"label",dataIndex:"definition",hidden:false,width:100,renderer:this.labelRenderer,scope:this},{header:this.app.i18n._("Name"),id:"name",dataIndex:"name",hidden:false,width:75},{header:this.app.i18n._("Type"),id:"xtype",dataIndex:"definition",hidden:false,width:75,renderer:this.typeRenderer,scope:this},{header:this.app.i18n._("Application"),id:"application_id",dataIndex:"application_id",hidden:false,width:100,renderer:this.appRenderer,scope:this},{header:this.app.i18n._("Model"),id:"model",dataIndex:"model",hidden:false,width:100}]},labelRenderer:function(a){return this.app.i18n._(a.label)},typeRenderer:function(a){return this.app.i18n._(a.type)},appRenderer:function(a){return this.app.i18n._(a.name)},initFilterToolbar:function(){this.filterToolbar=new Tine.widgets.grid.FilterToolbar({filterModels:[{label:this.app.i18n._("Customfield"),field:"query",operators:["contains"]},{filtertype:"admin.application",app:this.app}],defaultFilter:"query",filters:[],plugins:[new Tine.widgets.grid.FilterToolbarQuickFilterPlugin()]})},confirmApplicationRestart:function(){Ext.Msg.confirm(this.app.i18n._("Confirm"),this.app.i18n._("Restart application to apply new customfields?"),function(a){if(a=="yes"){window.location=window.location.href.replace(/#+.*/,"")}},this)},onUpdateRecord:function(a){Tine.Admin.customfield.GridPanel.superclass.onUpdateRecord.apply(this,arguments);this.confirmApplicationRestart()},onAfterDelete:function(a){Tine.Admin.customfield.GridPanel.superclass.onAfterDelete.apply(this,arguments);this.confirmApplicationRestart()}});